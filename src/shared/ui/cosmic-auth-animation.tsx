"use client";

import { motion, AnimatePresence } from "framer-motion";
import { useEffect, useState } from "react";

interface CosmicAuthAnimationProps {
  isActive: boolean;
  onComplete: () => void;
  duration?: number;
}

export const CosmicAuthAnimation = ({
  isActive,
  onComplete,
  duration = 3000,
}: CosmicAuthAnimationProps) => {
  const [showStars, setShowStars] = useState(false);
  const [showPlanet, setShowPlanet] = useState(false);
  const [showWormhole, setShowWormhole] = useState(false);

  useEffect(() => {
    console.log(
      "üîç CosmicAuthAnimation useEffect triggered, isActive:",
      isActive
    );

    if (isActive) {
      console.log("üåå –ó–∞–ø—É—Å–∫ –∫–æ—Å–º–∏—á–µ—Å–∫–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏");
      console.log("‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏:", duration, "–º—Å");

      // –°–±—Ä–æ—Å –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –Ω–æ–≤–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
      setShowStars(false);
      setShowWormhole(false);
      setShowPlanet(false);

      // –ü–æ—ç—Ç–∞–ø–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
      const starTimeout = setTimeout(() => {
        console.log("‚≠ê –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–≤–µ–∑–¥—ã");
        setShowStars(true);
      }, 100);

      const wormholeTimeout = setTimeout(() => {
        console.log("üåÄ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ—Ä–≤–æ—Ç–æ—á–∏–Ω—É");
        setShowWormhole(true);
      }, 400);

      const planetTimeout = setTimeout(() => {
        console.log("ü™ê –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–∞–Ω–µ—Ç—É");
        setShowPlanet(true);
      }, 800);

      // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏
      const completeTimeout = setTimeout(() => {
        console.log("‚ú® –ö–æ—Å–º–∏—á–µ—Å–∫–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –≤—ã–∑—ã–≤–∞–µ–º onComplete");
        onComplete();
      }, duration);

      // Cleanup —Ñ—É–Ω–∫—Ü–∏—è
      return () => {
        console.log("üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–æ–≤ –∫–æ—Å–º–∏—á–µ—Å–∫–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏");
        clearTimeout(starTimeout);
        clearTimeout(wormholeTimeout);
        clearTimeout(planetTimeout);
        clearTimeout(completeTimeout);
      };
    } else {
      console.log("‚ùå –ê–Ω–∏–º–∞—Ü–∏—è –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞, —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π");
      setShowStars(false);
      setShowPlanet(false);
      setShowWormhole(false);
    }
  }, [isActive, duration, onComplete]);

  console.log("üé® CosmicAuthAnimation render:", {
    isActive,
    showStars,
    showWormhole,
    showPlanet,
    duration,
  });

  if (!isActive) {
    console.log("üö´ CosmicAuthAnimation –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è, isActive = false");
    return null;
  }

  console.log("üåå CosmicAuthAnimation —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è, isActive:", isActive);

  return (
    <AnimatePresence>
      <motion.div
        className="fixed inset-0 z-50 flex items-center justify-center overflow-hidden"
        style={{
          background:
            "radial-gradient(circle, #1a1a2e 0%, #16213e 50%, #0f0f23 100%)",
        }}
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
        transition={{ duration: 0.5 }}
      >
        {/* –ü–†–û–°–¢–û–ô –¢–ï–°–¢ - –ë–û–õ–¨–®–û–ô –¢–ï–ö–°–¢ */}
        <div className="text-center">
          <motion.h1
            className="text-6xl font-bold text-white mb-4"
            animate={{
              scale: [1, 1.2, 1],
              textShadow: [
                "0 0 20px rgba(59, 130, 246, 0.5)",
                "0 0 40px rgba(147, 51, 234, 0.8)",
                "0 0 20px rgba(59, 130, 246, 0.5)",
              ],
            }}
            transition={{ duration: 1, repeat: Infinity }}
          >
            üåå –ö–û–°–ú–ò–ß–ï–°–ö–ê–Ø –ê–ù–ò–ú–ê–¶–ò–Ø –†–ê–ë–û–¢–ê–ï–¢! üåå
          </motion.h1>
          <motion.p
            className="text-2xl text-blue-200"
            animate={{ opacity: [0.5, 1, 0.5] }}
            transition={{ duration: 1, repeat: Infinity }}
          >
            –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration}–º—Å
          </motion.p>
        </div>

        {/* –ü—Ä–æ—Å—Ç–æ–µ –∑–≤–µ–∑–¥–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ */}
        {showStars && (
          <div className="absolute inset-0">
            {Array.from({ length: 20 }, (_, i) => (
              <motion.div
                key={i}
                className="absolute bg-white rounded-full w-2 h-2"
                style={{
                  left: `${Math.random() * 100}%`,
                  top: `${Math.random() * 100}%`,
                }}
                animate={{
                  opacity: [0, 1, 0],
                  scale: [0, 1, 0],
                }}
                transition={{
                  duration: 2,
                  delay: i * 0.1,
                  repeat: Infinity,
                }}
              />
            ))}
          </div>
        )}
      </motion.div>
    </AnimatePresence>
  );
};
