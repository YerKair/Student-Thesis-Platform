{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/shared/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cn } from \"@/shared/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow-sm transition-all duration-200 dark:shadow-primary/10\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,6HAAA,CAAA,KAAE,AAAD,EACV,+GACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,6HAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,6HAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,6HAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,6HAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,6HAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/shared/ui/progress.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\";\n\nimport { cn } from \"@/shared/lib/utils\";\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,6HAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/shared/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/shared/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n        success:\n          \"border-transparent bg-success text-success-foreground hover:bg-success/80\",\n        warning:\n          \"border-transparent bg-warning text-warning-foreground hover:bg-warning/80\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;YACT,SACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,6HAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/app/dashboard/thesis/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/shared/ui/card\";\nimport { Button } from \"@/shared/ui/button\";\nimport { Progress } from \"@/shared/ui/progress\";\nimport { Badge } from \"@/shared/ui/badge\";\nimport { useToast } from \"@/shared/ui/use-toast\";\nimport {\n  File,\n  FileText,\n  Upload,\n  CheckCircle,\n  Clock,\n  AlertCircle,\n  ChevronDown,\n  ChevronRight,\n  Download,\n  Trash2,\n  Calendar,\n  Star,\n  X,\n} from \"lucide-react\";\n\n// Типы статусов этапов\ntype StageStatus = \"pending\" | \"in_progress\" | \"completed\" | \"rejected\";\n\n// Интерфейс этапа\ninterface Stage {\n  id: number;\n  name: string;\n  description: string;\n  status: StageStatus;\n  deadline: string; // ISO формат даты\n  files: StageFile[];\n  feedback?: string;\n  isExpanded: boolean;\n}\n\n// Интерфейс файла\ninterface StageFile {\n  id: number;\n  name: string;\n  size: string;\n  uploadedAt: string;\n  type: string;\n  status: \"pending\" | \"approved\" | \"rejected\";\n}\n\n// Создание моковых данных для этапов диплома\nconst defaultStages: Stage[] = [\n  {\n    id: 1,\n    name: \"Первая предзащита\",\n    description:\n      \"Презентация концепции и плана дипломной работы. Необходимо загрузить план-график работы и предварительный план исследования.\",\n    status: \"completed\",\n    deadline: \"2025-03-15T23:59:59Z\",\n    files: [\n      {\n        id: 1,\n        name: \"План-график.pdf\",\n        size: \"1.2 MB\",\n        uploadedAt: \"2025-03-10T14:30:00Z\",\n        type: \"application/pdf\",\n        status: \"approved\",\n      },\n      {\n        id: 2,\n        name: \"Предварительный план.docx\",\n        size: \"548 KB\",\n        uploadedAt: \"2025-03-10T14:35:00Z\",\n        type: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        status: \"approved\",\n      },\n    ],\n    feedback:\n      \"Хорошая подготовка и четкое понимание целей исследования. Рекомендую больше внимания уделить методологии.\",\n    isExpanded: false,\n  },\n  {\n    id: 2,\n    name: \"Вторая предзащита\",\n    description:\n      \"Презентация первых результатов исследования и черновой версии теоретической части работы. Загрузите черновик первой главы и презентацию.\",\n    status: \"in_progress\",\n    deadline: \"2025-04-25T23:59:59Z\",\n    files: [\n      {\n        id: 3,\n        name: \"Глава_1_черновик.docx\",\n        size: \"2.4 MB\",\n        uploadedAt: \"2025-04-15T09:20:00Z\",\n        type: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        status: \"pending\",\n      },\n    ],\n    isExpanded: true,\n  },\n  {\n    id: 3,\n    name: \"Преддипломная практика\",\n    description:\n      \"Отчет о прохождении преддипломной практики и реализация практической части исследования. Необходимо загрузить отчет о практике и материалы практической части работы.\",\n    status: \"pending\",\n    deadline: \"2025-05-20T23:59:59Z\",\n    files: [],\n    isExpanded: false,\n  },\n  {\n    id: 4,\n    name: \"Финальная версия дипломной работы\",\n    description:\n      \"Загрузка полной версии дипломной работы, презентации, раздаточных материалов и отзыва научного руководителя для рецензирования.\",\n    status: \"pending\",\n    deadline: \"2025-06-10T23:59:59Z\",\n    files: [],\n    isExpanded: false,\n  },\n];\n\nexport default function ThesisPage() {\n  const [stages, setStages] = useState<Stage[]>(defaultStages);\n  const [isUploading, setIsUploading] = useState(false);\n  const { toast } = useToast();\n  const router = useRouter();\n\n  // Получение прогресса выполнения диплома\n  const getOverallProgress = () => {\n    const completedStages = stages.filter(\n      (stage) => stage.status === \"completed\"\n    ).length;\n    return (completedStages / stages.length) * 100;\n  };\n\n  // Функция для форматирования даты\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat(\"ru-RU\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    }).format(date);\n  };\n\n  // Проверка, просрочен ли дедлайн\n  const isDeadlinePassed = (deadline: string) => {\n    return new Date(deadline) < new Date();\n  };\n\n  // Получение оставшегося времени до дедлайна\n  const getTimeRemaining = (deadline: string) => {\n    const diff = new Date(deadline).getTime() - new Date().getTime();\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n\n    if (days < 0) return \"Просрочено\";\n    if (days === 0) return \"Сегодня\";\n    if (days === 1) return \"Остался 1 день\";\n\n    return `Осталось ${days} ${getDayWord(days)}`;\n  };\n\n  // Склонение слова \"день\"\n  const getDayWord = (days: number) => {\n    if (days % 10 === 1 && days % 100 !== 11) return \"день\";\n    if ([2, 3, 4].includes(days % 10) && ![12, 13, 14].includes(days % 100))\n      return \"дня\";\n    return \"дней\";\n  };\n\n  // Получение цвета для бейджа статуса\n  const getStatusBadgeVariant = (status: StageStatus) => {\n    switch (status) {\n      case \"completed\":\n        return \"success\";\n      case \"in_progress\":\n        return \"default\";\n      case \"rejected\":\n        return \"destructive\";\n      default:\n        return \"secondary\";\n    }\n  };\n\n  // Получение текста для бейджа статуса\n  const getStatusText = (status: StageStatus) => {\n    switch (status) {\n      case \"completed\":\n        return \"Завершено\";\n      case \"in_progress\":\n        return \"В процессе\";\n      case \"rejected\":\n        return \"Отклонено\";\n      default:\n        return \"Ожидает\";\n    }\n  };\n\n  // Получение иконки для статуса файла\n  const getFileStatusIcon = (status: string) => {\n    switch (status) {\n      case \"approved\":\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case \"rejected\":\n        return <X className=\"h-4 w-4 text-red-500\" />;\n      default:\n        return <Clock className=\"h-4 w-4 text-amber-500\" />;\n    }\n  };\n\n  // Получение текста для статуса файла\n  const getFileStatusText = (status: string) => {\n    switch (status) {\n      case \"approved\":\n        return \"Одобрен\";\n      case \"rejected\":\n        return \"Отклонен\";\n      default:\n        return \"На проверке\";\n    }\n  };\n\n  // Переключение развернутости этапа\n  const toggleStageExpand = (stageId: number) => {\n    setStages((prevStages) =>\n      prevStages.map((stage) =>\n        stage.id === stageId\n          ? { ...stage, isExpanded: !stage.isExpanded }\n          : stage\n      )\n    );\n  };\n\n  // Загрузка файла\n  const handleFileUpload = (\n    stageId: number,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const files = event.target.files;\n    if (!files || files.length === 0) return;\n\n    setIsUploading(true);\n\n    // Имитация загрузки\n    setTimeout(() => {\n      const newFiles: StageFile[] = Array.from(files).map((file, index) => ({\n        id: Date.now() + index,\n        name: file.name,\n        size: formatFileSize(file.size),\n        uploadedAt: new Date().toISOString(),\n        type: file.type,\n        status: \"pending\",\n      }));\n\n      setStages((prevStages) =>\n        prevStages.map((stage) =>\n          stage.id === stageId\n            ? {\n                ...stage,\n                files: [...stage.files, ...newFiles],\n                status:\n                  stage.status === \"pending\" ? \"in_progress\" : stage.status,\n              }\n            : stage\n        )\n      );\n\n      setIsUploading(false);\n\n      toast({\n        title: \"Файл загружен\",\n        description: `${\n          files.length > 1\n            ? `${files.length} файлов загружено`\n            : `Файл \"${files[0].name}\" загружен`\n        } успешно.`,\n      });\n    }, 1500);\n  };\n\n  // Форматирование размера файла\n  const formatFileSize = (bytes: number): string => {\n    if (bytes === 0) return \"0 Bytes\";\n\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + \" \" + sizes[i];\n  };\n\n  // Удаление файла\n  const handleDeleteFile = (stageId: number, fileId: number) => {\n    setStages((prevStages) =>\n      prevStages.map((stage) =>\n        stage.id === stageId\n          ? {\n              ...stage,\n              files: stage.files.filter((file) => file.id !== fileId),\n            }\n          : stage\n      )\n    );\n\n    toast({\n      title: \"Файл удален\",\n      description: \"Файл успешно удален.\",\n    });\n  };\n\n  // Получение иконки для типа файла\n  const getFileIcon = (fileType: string) => {\n    if (fileType.includes(\"pdf\")) {\n      return <FileText className=\"h-4 w-4\" />;\n    } else if (fileType.includes(\"word\") || fileType.includes(\"doc\")) {\n      return <FileText className=\"h-4 w-4\" />;\n    } else if (fileType.includes(\"image\")) {\n      return <File className=\"h-4 w-4\" />;\n    } else {\n      return <File className=\"h-4 w-4\" />;\n    }\n  };\n\n  return (\n    <div className=\"space-y-4 xxs:space-y-6 p-3 xxs:p-4 sm:p-6 bg-white\">\n      <div>\n        <h1 className=\"text-xl xxs:text-2xl font-bold\">Дипломная работа</h1>\n        <p className=\"text-xs xxs:text-sm text-gray-500 mt-1\">\n          Отслеживайте этапы и прогресс вашей дипломной работы\n        </p>\n      </div>\n\n      {/* Прогресс-карточка */}\n      <Card className=\"bg-white border-gray-200\">\n        <CardHeader className=\"pb-2 p-3 xxs:p-4 sm:p-6\">\n          <CardTitle className=\"text-base xxs:text-lg sm:text-xl\">\n            Общий прогресс\n          </CardTitle>\n          <CardDescription className=\"text-xs xxs:text-sm\">\n            Текущий статус выполнения дипломной работы\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"p-3 xxs:p-4 sm:p-6 pt-0 xxs:pt-0 sm:pt-0\">\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between text-xs xxs:text-sm\">\n              <span>Выполнено {getOverallProgress().toFixed(0)}%</span>\n              <span className=\"text-gray-500\">\n                {stages.filter((stage) => stage.status === \"completed\").length}{\" \"}\n                из {stages.length} этапов\n              </span>\n            </div>\n            <Progress value={getOverallProgress()} className=\"h-1.5 xxs:h-2\" />\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-2 xxs:gap-3 sm:gap-4 mt-4 xxs:mt-5 sm:mt-6\">\n            <div className=\"bg-blue-50 rounded-lg p-2 xxs:p-3 flex flex-col items-center justify-center\">\n              <Badge variant=\"outline\" className=\"mb-1 text-xs\">\n                Этап 2/4\n              </Badge>\n              <p className=\"text-xs xxs:text-sm text-center\">\n                Вторая предзащита\n              </p>\n            </div>\n            <div className=\"bg-amber-50 rounded-lg p-2 xxs:p-3 flex flex-col items-center justify-center\">\n              <Calendar className=\"h-4 w-4 xxs:h-5 xxs:w-5 text-amber-500 mb-1\" />\n              <p className=\"text-xs xxs:text-sm text-center\">\n                До дедлайна: 5 дней\n              </p>\n            </div>\n            <div className=\"bg-green-50 rounded-lg p-2 xxs:p-3 flex flex-col items-center justify-center\">\n              <CheckCircle className=\"h-4 w-4 xxs:h-5 xxs:w-5 text-green-500 mb-1\" />\n              <p className=\"text-xs xxs:text-sm text-center\">\n                Завершено: 1 этап\n              </p>\n            </div>\n            <div className=\"bg-purple-50 rounded-lg p-2 xxs:p-3 flex flex-col items-center justify-center\">\n              <Star className=\"h-4 w-4 xxs:h-5 xxs:w-5 text-purple-500 mb-1\" />\n              <p className=\"text-xs xxs:text-sm text-center\">Защита: 10 июня</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Этапы дипломной работы */}\n      <div className=\"space-y-3 xxs:space-y-4\">\n        {stages.map((stage) => (\n          <Card\n            key={stage.id}\n            className={`overflow-hidden border ${\n              stage.status === \"completed\"\n                ? \"border-green-200\"\n                : stage.status === \"in_progress\"\n                ? \"border-blue-200\"\n                : stage.status === \"rejected\"\n                ? \"border-red-200\"\n                : \"border-gray-200\"\n            } bg-white`}\n          >\n            <div\n              className={`p-4 flex justify-between items-center cursor-pointer ${\n                stage.status === \"completed\"\n                  ? \"bg-green-50\"\n                  : stage.status === \"in_progress\"\n                  ? \"bg-blue-50\"\n                  : stage.status === \"rejected\"\n                  ? \"bg-red-50\"\n                  : \"bg-gray-50\"\n              }`}\n              onClick={() => toggleStageExpand(stage.id)}\n            >\n              <div className=\"flex items-center\">\n                <Badge\n                  variant={getStatusBadgeVariant(stage.status)}\n                  className=\"mr-3\"\n                >\n                  {getStatusText(stage.status)}\n                </Badge>\n                <div>\n                  <h3 className=\"font-medium text-lg\">\n                    Этап {stage.id}. {stage.name}\n                  </h3>\n                  <p className=\"text-sm text-gray-500\">\n                    Дедлайн: {formatDate(stage.deadline)} •{\" \"}\n                    {getTimeRemaining(stage.deadline)}\n                  </p>\n                </div>\n              </div>\n              <div>\n                {stage.isExpanded ? (\n                  <ChevronDown className=\"h-5 w-5 text-gray-400\" />\n                ) : (\n                  <ChevronRight className=\"h-5 w-5 text-gray-400\" />\n                )}\n              </div>\n            </div>\n\n            {stage.isExpanded && (\n              <div className=\"border-t border-gray-200 p-4 bg-white\">\n                <div className=\"mb-4\">\n                  <p className=\"text-gray-700\">{stage.description}</p>\n                </div>\n\n                {/* Секция файлов */}\n                <div className=\"mt-4\">\n                  <h4 className=\"text-sm font-medium mb-2\">\n                    Файлы ({stage.files.length})\n                  </h4>\n\n                  {stage.files.length > 0 ? (\n                    <div className=\"space-y-2 mb-4\">\n                      {stage.files.map((file) => (\n                        <div\n                          key={file.id}\n                          className=\"flex items-center justify-between p-2 border border-gray-200 rounded-md bg-gray-50\"\n                        >\n                          <div className=\"flex items-center\">\n                            {getFileIcon(file.type)}\n                            <span className=\"ml-2 text-sm\">{file.name}</span>\n                            <span className=\"ml-2 text-xs text-gray-500\">\n                              {file.size}\n                            </span>\n                          </div>\n                          <div className=\"flex items-center\">\n                            <div className=\"flex items-center mr-3\">\n                              {getFileStatusIcon(file.status)}\n                              <span className=\"ml-1 text-xs\">\n                                {getFileStatusText(file.status)}\n                              </span>\n                            </div>\n                            <button\n                              className=\"p-1 hover:bg-gray-200 rounded-md\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                // Имитация скачивания файла\n                                toast({\n                                  title: \"Скачивание файла\",\n                                  description: `Файл \"${file.name}\" успешно скачан.`,\n                                });\n                              }}\n                            >\n                              <Download className=\"h-4 w-4 text-gray-500\" />\n                            </button>\n                            {file.status === \"pending\" && (\n                              <button\n                                className=\"p-1 hover:bg-gray-200 rounded-md ml-1\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleDeleteFile(stage.id, file.id);\n                                }}\n                              >\n                                <Trash2 className=\"h-4 w-4 text-red-500\" />\n                              </button>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"text-center py-4 text-gray-500 border border-dashed border-gray-300 rounded-md mb-4 bg-white\">\n                      <p>Нет загруженных файлов</p>\n                    </div>\n                  )}\n\n                  {/* Загрузка файлов */}\n                  <div className=\"mt-4\">\n                    <div className=\"relative\">\n                      <input\n                        type=\"file\"\n                        id={`file-upload-${stage.id}`}\n                        className=\"sr-only\"\n                        multiple\n                        onChange={(e) => handleFileUpload(stage.id, e)}\n                        disabled={isUploading || stage.status === \"completed\"}\n                      />\n                      <label\n                        htmlFor={`file-upload-${stage.id}`}\n                        className={`flex items-center justify-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 cursor-pointer w-full ${\n                          isUploading || stage.status === \"completed\"\n                            ? \"opacity-50 cursor-not-allowed\"\n                            : \"\"\n                        }`}\n                      >\n                        {isUploading ? (\n                          <>\n                            <svg\n                              className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-gray-500\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              fill=\"none\"\n                              viewBox=\"0 0 24 24\"\n                            >\n                              <circle\n                                className=\"opacity-25\"\n                                cx=\"12\"\n                                cy=\"12\"\n                                r=\"10\"\n                                stroke=\"currentColor\"\n                                strokeWidth=\"4\"\n                              ></circle>\n                              <path\n                                className=\"opacity-75\"\n                                fill=\"currentColor\"\n                                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                              ></path>\n                            </svg>\n                            Загрузка...\n                          </>\n                        ) : (\n                          <>\n                            <Upload className=\"mr-2 h-4 w-4\" />\n                            {stage.status === \"completed\"\n                              ? \"Этап завершен\"\n                              : \"Загрузить файлы\"}\n                          </>\n                        )}\n                      </label>\n                    </div>\n                  </div>\n\n                  {/* Отзыв руководителя */}\n                  {stage.feedback && (\n                    <div className=\"mt-4 p-3 bg-blue-50 border-l-4 border-blue-500 rounded\">\n                      <h4 className=\"text-sm font-medium mb-1\">\n                        Отзыв руководителя\n                      </h4>\n                      <p className=\"text-sm text-gray-700\">{stage.feedback}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </Card>\n        ))}\n      </div>\n\n      {/* Дополнительная информация о диплоне */}\n      <Card className=\"bg-white border-gray-200\">\n        <CardHeader>\n          <CardTitle>Информация о дипломной работе</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500\">Тема</h3>\n                <p>\n                  Разработка системы цифрового сопровождения дипломных работ\n                </p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500\">\n                  Научный руководитель\n                </h3>\n                <p>Петрова Анна Сергеевна</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500\">Кафедра</h3>\n                <p>Кафедра информационных технологий</p>\n              </div>\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-500\">\n                  Дата защиты\n                </h3>\n                <p>10 июня 2025 г.</p>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n        <CardFooter className=\"border-t flex justify-between items-center py-5\">\n          <Button variant=\"outline\" onClick={() => router.push(\"/dashboard\")}>\n            Вернуться на дашборд\n          </Button>\n          <Button\n            onClick={() =>\n              window.open(\"https://example.com/guidelines.pdf\", \"_blank\")\n            }\n          >\n            Методические указания\n          </Button>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}