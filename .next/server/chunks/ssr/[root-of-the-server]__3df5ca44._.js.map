{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/features/auth/lib/use-auth.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { User } from \"@/entities/user/model/types\";\nimport {\n  LoginCredentials,\n  RegisterCredentials,\n  AuthState,\n} from \"../model/types\";\n\n// Базовый URL API\nconst API_BASE_URL =\n  process.env.NEXT_PUBLIC_API_BASE_URL || \"http://localhost:8000\";\n\n// API сервис аутентификации\nclass AuthService {\n  static async login(\n    credentials: LoginCredentials\n  ): Promise<{ user: User; token: string; refreshToken: string }> {\n    try {\n      console.log(\"Trying to login with credentials:\", credentials.email);\n\n      // Создаем FormData для отправки\n      const formData = new URLSearchParams();\n      formData.append(\"username\", credentials.email); // Бэкенд ожидает параметр 'username'\n      formData.append(\"password\", credentials.password);\n\n      const response = await fetch(`${API_BASE_URL}/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\", // Важно: правильный Content-Type\n          Accept: \"application/json\",\n        },\n        body: formData.toString(), // Преобразуем в строку\n        credentials: \"include\", // Важно для CORS с куками\n        mode: \"cors\", // Явно указываем режим CORS\n      });\n\n      // Детальная обработка ошибок\n      if (!response.ok) {\n        // Пытаемся получить текст ошибки\n        let errorText;\n        try {\n          errorText = await response.text();\n          console.error(\n            \"Login error response:\",\n            errorText,\n            \"Status:\",\n            response.status\n          );\n\n          // Пытаемся распарсить как JSON\n          const errorJson = JSON.parse(errorText);\n          const errorMessage = errorJson.detail || \"Ошибка при входе\";\n          throw new Error(errorMessage);\n        } catch (parseError) {\n          // Если не смогли распарсить JSON, возвращаем текст ошибки или статус\n          console.error(\"Could not parse error response:\", parseError);\n          throw new Error(errorText || `Ошибка сервера: ${response.status}`);\n        }\n      }\n\n      const data = await response.json();\n      console.log(\"Login successful, received data:\", data);\n\n      // Получаем профиль пользователя\n      const userProfile = await AuthService.getUserProfile(data.access_token);\n      console.log(\"User profile:\", userProfile);\n\n      // Сохраняем токены в localStorage\n      localStorage.setItem(\"authToken\", data.access_token);\n      localStorage.setItem(\"user\", JSON.stringify(userProfile));\n\n      return {\n        user: userProfile,\n        token: data.access_token,\n        refreshToken: \"\", // В бэкенде refresh token не используется\n      };\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      throw error;\n    }\n  }\n\n  static async register(\n    credentials: RegisterCredentials\n  ): Promise<{ user: User; token: string; refreshToken: string }> {\n    try {\n      console.log(\"Attempting registration for:\", credentials.email);\n\n      // Подготовка данных для API в соответствии с ожидаемым форматом бэкенда\n      const registerData = {\n        email: credentials.email,\n        password: credentials.password,\n        fullname: credentials.name,\n      };\n\n      // Регистрация пользователя с обработкой CORS\n      const registerResponse = await fetch(`${API_BASE_URL}/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify(registerData),\n        credentials: \"include\", // Важно для CORS с куками\n        mode: \"cors\", // Явно указываем режим CORS\n      });\n\n      // Обработка ошибок\n      if (!registerResponse.ok) {\n        // Пытаемся получить текст ошибки\n        let errorText;\n        try {\n          errorText = await registerResponse.text();\n          console.error(\"Registration error response:\", errorText);\n\n          // Пытаемся распарсить как JSON\n          const errorJson = JSON.parse(errorText);\n          const errorMessage = errorJson.detail || \"Ошибка при регистрации\";\n          throw new Error(errorMessage);\n        } catch (parseError) {\n          // Если не смогли распарсить JSON, возвращаем текст ошибки или статус\n          console.error(\"Could not parse error response:\", parseError);\n          throw new Error(\n            errorText || `Ошибка сервера: ${registerResponse.status}`\n          );\n        }\n      }\n\n      console.log(\"Registration successful\");\n\n      // После успешной регистрации сразу создаем профиль пользователя без доп. запроса логина\n      const userProfile: User = {\n        id: \"temp-id\",\n        name: credentials.name,\n        email: credentials.email,\n        role: \"student\",\n        isActive: true,\n        createdAt: new Date().toISOString(),\n      };\n\n      return {\n        user: userProfile,\n        token: \"temp-token\", // Временный токен - пользователь должен будет авторизоваться\n        refreshToken: \"\",\n      };\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      throw error;\n    }\n  }\n\n  static async getUserProfile(token: string): Promise<User> {\n    const response = await fetch(`${API_BASE_URL}/me`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: \"application/json\",\n      },\n      credentials: \"include\",\n      mode: \"cors\",\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Не удалось получить профиль пользователя\");\n    }\n\n    const userData = await response.json();\n    console.log(\"User data from API:\", userData);\n\n    // Проверяем наличие нужных данных в ответе\n    if (!userData.message || !userData.message.username) {\n      throw new Error(\"Неверный формат данных профиля пользователя\");\n    }\n\n    // Получаем данные пользователя из ответа API\n    const { username, fullname, roles, id } = userData.message;\n\n    // Создаем объект пользователя на основе полученных данных\n    const user: User = {\n      id: id?.toString() || \"1\", // Используем ID из API или дефолтное значение\n      name: fullname || username.split(\"@\")[0], // Используем fullname если доступно, иначе часть email\n      email: username,\n      role: roles?.[0] || \"student\", // Берем первую роль из списка\n      isActive: true,\n      createdAt: new Date().toISOString(),\n    };\n\n    return user;\n  }\n\n  static logout(): void {\n    localStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"refreshToken\");\n    localStorage.removeItem(\"user\");\n  }\n\n  static isAuthenticated(): boolean {\n    return !!localStorage.getItem(\"authToken\");\n  }\n\n  static getUser(): User | null {\n    const userJson = localStorage.getItem(\"user\");\n    if (!userJson) return null;\n\n    try {\n      return JSON.parse(userJson) as User;\n    } catch (e) {\n      console.error(\"Failed to parse user data\", e);\n      return null;\n    }\n  }\n\n  static getToken(): string | null {\n    return localStorage.getItem(\"authToken\");\n  }\n}\n\nexport function useAuth() {\n  const router = useRouter();\n  const [authState, setAuthState] = useState<AuthState>({\n    user: null,\n    token: null,\n    isLoading: true,\n    isAuthenticated: false,\n  });\n\n  // Инициализация состояния аутентификации\n  useEffect(() => {\n    // В клиентском коде нужно проверять window, чтобы избежать ошибок SSR\n    if (typeof window !== \"undefined\") {\n      const token = localStorage.getItem(\"authToken\");\n      const user = AuthService.getUser();\n\n      setAuthState({\n        user,\n        token,\n        isLoading: false,\n        isAuthenticated: !!token && !!user,\n      });\n    }\n  }, []);\n\n  // Функция входа\n  const login = async (credentials: LoginCredentials) => {\n    setAuthState((prev) => ({ ...prev, isLoading: true }));\n    console.log(\"Starting login process\");\n\n    try {\n      const result = await AuthService.login(credentials);\n      console.log(\"Login successful, updating auth state\");\n\n      setAuthState({\n        user: result.user,\n        token: result.token,\n        isLoading: false,\n        isAuthenticated: true,\n      });\n\n      console.log(\"Auth state updated, returning result\");\n      return result;\n    } catch (error) {\n      setAuthState((prev) => ({ ...prev, isLoading: false }));\n      throw error;\n    }\n  };\n\n  // Функция регистрации\n  const register = async (credentials: RegisterCredentials) => {\n    setAuthState((prev) => ({ ...prev, isLoading: true }));\n\n    try {\n      const result = await AuthService.register(credentials);\n\n      // В случае успешной регистрации - не сохраняем состояние авторизации,\n      // т.к. нужно перенаправить на логин\n      setAuthState((prev) => ({\n        ...prev,\n        isLoading: false,\n      }));\n\n      return result;\n    } catch (error) {\n      setAuthState((prev) => ({ ...prev, isLoading: false }));\n      throw error;\n    }\n  };\n\n  // Функция выхода\n  const logout = () => {\n    AuthService.logout();\n\n    setAuthState({\n      user: null,\n      token: null,\n      isLoading: false,\n      isAuthenticated: false,\n    });\n\n    router.push(\"/auth/login\");\n  };\n\n  return {\n    ...authState,\n    login,\n    register,\n    logout,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/app/providers/auth-provider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, ReactNode, useContext } from \"react\";\nimport { useAuth } from \"@/features/auth/lib/use-auth\";\nimport { AuthState } from \"@/features/auth/model/types\";\nimport {\n  LoginFormValues,\n  RegisterFormValues,\n} from \"@/features/auth/model/schema\";\nimport { User } from \"@/entities/user/model/types\";\n\ninterface AuthContextType extends AuthState {\n  login: (\n    data: LoginFormValues\n  ) => Promise<{ user: User; token: string; refreshToken: string }>;\n  register: (\n    data: RegisterFormValues\n  ) => Promise<{ user: User; token: string; refreshToken: string }>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const auth = useAuth();\n\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\n}\n\nexport const useAuthContext = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuthContext must be used within an AuthProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAqBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,OAAO,CAAA,GAAA,6IAAA,CAAA,UAAO,AAAD;IAEnB,qBAAO,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAAO;;;;;;AAC7C;AAEO,MAAM,iBAAiB;IAC5B,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/shared/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\n/**\n * Utility function to conditionally join class names together\n * and merge Tailwind CSS classes properly\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Breakpoint size constants that match the Tailwind config\n */\nexport const breakpoints = {\n  xxs: 360,\n  xs: 480,\n  sm: 640,\n  md: 768,\n  sdl: 800,\n  lg: 1024,\n  xl: 1280,\n  \"2xl\": 1536,\n} as const;\n\nexport type Breakpoint = keyof typeof breakpoints;\n\n/**\n * Utility function to create responsive classes with a mobile-first approach\n * @param base Base class applied for all screen sizes\n * @param responsive Object mapping breakpoints to classes\n */\nexport function responsive(\n  base: string,\n  responsive: Partial<Record<Breakpoint, string>>\n) {\n  const classes = [base];\n\n  for (const [breakpoint, value] of Object.entries(responsive) as [\n    Breakpoint,\n    string\n  ][]) {\n    classes.push(`${breakpoint}:${value}`);\n  }\n\n  return classes.join(\" \");\n}\n\n/**\n * Проверка, является ли устройство маленьким экраном\n * @returns Возвращает true, если ширина экрана меньше 800px\n */\nexport function isSmallDevice(): boolean {\n  if (typeof window === \"undefined\") return false;\n  return window.innerWidth < breakpoints.sdl;\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAMO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAKO,MAAM,cAAc;IACzB,KAAK;IACL,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,KAAK;IACL,IAAI;IACJ,IAAI;IACJ,OAAO;AACT;AASO,SAAS,WACd,IAAY,EACZ,UAA+C;IAE/C,MAAM,UAAU;QAAC;KAAK;IAEtB,KAAK,MAAM,CAAC,YAAY,MAAM,IAAI,OAAO,OAAO,CAAC,YAG5C;QACH,QAAQ,IAAI,CAAC,GAAG,WAAW,CAAC,EAAE,OAAO;IACvC;IAEA,OAAO,QAAQ,IAAI,CAAC;AACtB;AAMO,SAAS;IACd,wCAAmC,OAAO;;AAE5C","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/shared/ui/feedback/MobileScreenWarning.tsx"],"sourcesContent":["\"use client\";\n\nimport { cn } from \"@/shared/lib/utils\";\nimport { ReactNode, useState, useEffect } from \"react\";\nimport { X } from \"lucide-react\";\nimport { usePathname } from \"next/navigation\";\n\nexport interface MobileScreenWarningProps {\n  children?: ReactNode;\n  className?: string;\n  maxWidth?: number;\n  message?: string;\n  dismissible?: boolean;\n  persistent?: boolean;\n}\n\n/**\n * Компонент, который показывает предупреждение на очень узких экранах,\n * предлагая пользователю повернуть устройство или растянуть окно браузера\n */\nexport function MobileScreenWarning({\n  children,\n  className,\n  maxWidth = 360,\n  message = \"Для лучшего отображения поверните устройство или увеличьте размер окна\",\n  dismissible = true,\n  persistent = false,\n}: MobileScreenWarningProps) {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isDismissed, setIsDismissed] = useState(false);\n  const storageKey = \"mobile-warning-dismissed\";\n  const pathname = usePathname();\n\n  // Определяем пути для которых нужно особое предупреждение\n  const isNonAdaptivePath =\n    pathname &&\n    (pathname.includes(\"/dashboard/teams\") ||\n      pathname.includes(\"/dashboard/thesis\"));\n\n  // Проверяем, принадлежит ли путь к дашборду\n  const isDashboardPath = pathname && pathname.startsWith(\"/dashboard\");\n\n  // Не показываем предупреждение для страниц дашборда, кроме страниц команды и дипломной работы\n  const shouldShowWarning = !isDashboardPath || isNonAdaptivePath;\n\n  useEffect(() => {\n    // Проверяем, было ли предупреждение закрыто ранее\n    if (!persistent && localStorage.getItem(storageKey) === \"true\") {\n      setIsDismissed(true);\n    }\n\n    const checkWidth = () => {\n      // Используем разные пороги для разных страниц\n      const thresholdWidth = isNonAdaptivePath ? 800 : maxWidth;\n\n      if (\n        window.innerWidth <= thresholdWidth &&\n        !isDismissed &&\n        shouldShowWarning\n      ) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    // Проверяем ширину при монтировании\n    checkWidth();\n\n    // Добавляем слушатель изменения размера окна\n    window.addEventListener(\"resize\", checkWidth);\n\n    return () => {\n      window.removeEventListener(\"resize\", checkWidth);\n    };\n  }, [maxWidth, isDismissed, persistent, isNonAdaptivePath, shouldShowWarning]);\n\n  const handleDismiss = () => {\n    setIsDismissed(true);\n    setIsVisible(false);\n\n    // Если предупреждение не должно показываться снова, сохраняем это в localStorage\n    if (!persistent) {\n      localStorage.setItem(storageKey, \"true\");\n    }\n  };\n\n  if (!isVisible) {\n    return null;\n  }\n\n  // Разные сообщения для разных страниц\n  const displayMessage = isNonAdaptivePath\n    ? \"Эта страница не полностью адаптирована для экранов меньше 800px. Для лучшего отображения используйте устройство с большим экраном.\"\n    : message;\n\n  return (\n    <div\n      className={cn(\n        \"fixed bottom-0 left-0 right-0 z-50 p-3 bg-warning text-warning-foreground text-sm text-center shadow-md\",\n        \"safe-area-bottom\",\n        className\n      )}\n    >\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex-1\">{displayMessage}</div>\n        {dismissible && (\n          <button\n            onClick={handleDismiss}\n            className=\"ml-2 p-1 rounded-full hover:bg-warning-foreground/10\"\n            aria-label=\"Закрыть предупреждение\"\n          >\n            <X size={16} />\n          </button>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAoBO,SAAS,oBAAoB,EAClC,QAAQ,EACR,SAAS,EACT,WAAW,GAAG,EACd,UAAU,wEAAwE,EAClF,cAAc,IAAI,EAClB,aAAa,KAAK,EACO;IACzB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,aAAa;IACnB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,0DAA0D;IAC1D,MAAM,oBACJ,YACA,CAAC,SAAS,QAAQ,CAAC,uBACjB,SAAS,QAAQ,CAAC,oBAAoB;IAE1C,4CAA4C;IAC5C,MAAM,kBAAkB,YAAY,SAAS,UAAU,CAAC;IAExD,8FAA8F;IAC9F,MAAM,oBAAoB,CAAC,mBAAmB;IAE9C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,kDAAkD;QAClD,IAAI,CAAC,cAAc,aAAa,OAAO,CAAC,gBAAgB,QAAQ;YAC9D,eAAe;QACjB;QAEA,MAAM,aAAa;YACjB,8CAA8C;YAC9C,MAAM,iBAAiB,oBAAoB,MAAM;YAEjD,IACE,OAAO,UAAU,IAAI,kBACrB,CAAC,eACD,mBACA;gBACA,aAAa;YACf,OAAO;gBACL,aAAa;YACf;QACF;QAEA,oCAAoC;QACpC;QAEA,6CAA6C;QAC7C,OAAO,gBAAgB,CAAC,UAAU;QAElC,OAAO;YACL,OAAO,mBAAmB,CAAC,UAAU;QACvC;IACF,GAAG;QAAC;QAAU;QAAa;QAAY;QAAmB;KAAkB;IAE5E,MAAM,gBAAgB;QACpB,eAAe;QACf,aAAa;QAEb,iFAAiF;QACjF,IAAI,CAAC,YAAY;YACf,aAAa,OAAO,CAAC,YAAY;QACnC;IACF;IAEA,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,sCAAsC;IACtC,MAAM,iBAAiB,oBACnB,uIACA;IAEJ,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,6HAAA,CAAA,KAAE,AAAD,EACV,2GACA,oBACA;;0BAGF,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAAU;;;;;;oBACxB,6BACC,8OAAC;wBACC,SAAS;wBACT,WAAU;wBACV,cAAW;kCAEX,cAAA,8OAAC,4LAAA,CAAA,IAAC;4BAAC,MAAM;;;;;;;;;;;;;;;;;YAId;;;;;;;AAGP","debugId":null}}]
}