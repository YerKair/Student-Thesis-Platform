{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/app/theme-init-script.tsx"],"sourcesContent":["\"use client\";\n\nexport function ThemeInitScript() {\n  return (\n    <script\n      dangerouslySetInnerHTML={{\n        __html: `\n          (function() {\n            try {\n              const theme = localStorage.getItem('app-theme');\n              const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n              \n              if (theme === 'dark' || (!theme && prefersDark)) {\n                document.documentElement.setAttribute('data-theme', 'dark');\n              } else {\n                document.documentElement.setAttribute('data-theme', 'light');\n              }\n            } catch (e) {\n              console.error('Error applying theme:', e);\n            }\n          })()\n        `,\n      }}\n    />\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS;IACd,qBACE,8OAAC;QACC,yBAAyB;YACvB,QAAQ,CAAC;;;;;;;;;;;;;;;QAeT,CAAC;QACH;;;;;;AAGN","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/app/providers/theme-provider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\n\ntype Theme = \"light\" | \"dark\";\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n};\n\ntype ThemeProviderState = {\n  theme: Theme;\n  toggleTheme: () => void;\n};\n\nconst ThemeContext = createContext<ThemeProviderState | undefined>(undefined);\n\nexport function ThemeProvider({ children }: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(\"light\");\n  const [isClient, setIsClient] = useState(false);\n\n  // Устанавливаем флаг, что мы на клиенте после монтирования\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // Загрузка темы из localStorage при инициализации\n  useEffect(() => {\n    // Проверяем сначала localStorage\n    const storedTheme = localStorage.getItem(\"app-theme\") as Theme | null;\n\n    // Если есть сохраненная тема, используем её\n    if (storedTheme === \"light\" || storedTheme === \"dark\") {\n      setTheme(storedTheme);\n      document.documentElement.setAttribute(\"data-theme\", storedTheme);\n    }\n    // Иначе проверяем системные предпочтения\n    else if (typeof window !== \"undefined\") {\n      const prefersDark = window.matchMedia(\n        \"(prefers-color-scheme: dark)\"\n      ).matches;\n      const defaultTheme = prefersDark ? \"dark\" : \"light\";\n      setTheme(defaultTheme);\n      document.documentElement.setAttribute(\"data-theme\", defaultTheme);\n    }\n  }, []);\n\n  // При изменении темы обновляем атрибут на документе и сохраняем в localStorage\n  useEffect(() => {\n    if (theme) {\n      document.documentElement.setAttribute(\"data-theme\", theme);\n      localStorage.setItem(\"app-theme\", theme);\n\n      // Force apply theme class to body and document for compatibility with some components\n      if (theme === \"dark\") {\n        document.documentElement.classList.add(\"dark\");\n        document.body.classList.add(\"dark\");\n        document.documentElement.classList.remove(\"light\");\n        document.body.classList.remove(\"light\");\n\n        // Принудительно устанавливаем стили для темной темы\n        const headerElement = document.querySelector(\"header\");\n        if (headerElement) {\n          headerElement.setAttribute(\n            \"style\",\n            \"background-color: #121212 !important\"\n          );\n        }\n\n        // Устанавливаем стили для карточек и таблиц напрямую\n        document.querySelectorAll('.card, [class*=\"Card\"]').forEach((card) => {\n          card.setAttribute(\n            \"style\",\n            \"background-color: #1e1e1e !important; border-color: #383838 !important;\"\n          );\n        });\n\n        document.querySelectorAll(\"table\").forEach((table) => {\n          table.setAttribute(\"style\", \"background-color: #1e1e1e !important;\");\n        });\n\n        document.querySelectorAll(\"tr\").forEach((row) => {\n          row.setAttribute(\n            \"style\",\n            \"border-color: #383838 !important; background-color: #1e1e1e !important;\"\n          );\n        });\n\n        document.querySelectorAll(\"td, th\").forEach((cell) => {\n          cell.setAttribute(\n            \"style\",\n            \"color: #e5e7eb !important; border-color: #383838 !important; background-color: #1e1e1e !important;\"\n          );\n        });\n\n        // Добавляем стили для специальных компонентов\n        document\n          .querySelectorAll('.badge, [class*=\"Badge\"]')\n          .forEach((badge) => {\n            badge.setAttribute(\n              \"style\",\n              \"background-color: #2c2c2c !important; color: #e5e7eb !important; border-color: #383838 !important;\"\n            );\n          });\n\n        // Добавляем стили для заголовков в карточках\n        document.querySelectorAll('[class*=\"CardTitle\"]').forEach((title) => {\n          title.setAttribute(\"style\", \"color: white !important;\");\n        });\n\n        document\n          .querySelectorAll('[class*=\"CardDescription\"]')\n          .forEach((desc) => {\n            desc.setAttribute(\"style\", \"color: #d1d5db !important;\");\n          });\n\n        // Добавляем CSS-стили глобально для всей страницы\n        const styleElement = document.createElement(\"style\");\n        styleElement.id = \"custom-dark-theme-styles\";\n        styleElement.textContent = `\n          body.dark .bg-white { background-color: #121212 !important; }\n          body.dark table { background-color: #1e1e1e !important; }\n          body.dark tr { background-color: #1e1e1e !important; border-color: #383838 !important; }\n          body.dark th, body.dark td { color: #e5e7eb !important; background-color: #1e1e1e !important; }\n          body.dark input, body.dark textarea, body.dark select { background-color: #2c2c2c !important; color: white !important; border-color: #383838 !important; }\n          body.dark button[class*=\"outline\"] { border-color: #383838 !important; color: #e5e7eb !important; background-color: #1e1e1e !important; }\n          body.dark button[class*=\"outline\"]:hover { background-color: #2c2c2c !important; }\n          \n          /* Все основные контейнеры */\n          body.dark, html.dark, [data-theme=\"dark\"], \n          body.dark div, body.dark section, body.dark main, \n          body.dark article, body.dark aside, body.dark nav {\n            background-color: #121212 !important;\n          }\n          \n          /* Темно-серый для карточек и интерактивных элементов */\n          body.dark .card, body.dark [class*=\"Card\"], \n          body.dark [role=\"dialog\"], body.dark [class*=\"container\"] {\n            background-color: #1e1e1e !important;\n            border-color: #383838 !important;\n          }\n        `;\n        const existingStyle = document.getElementById(\n          \"custom-dark-theme-styles\"\n        );\n        if (!existingStyle) {\n          document.head.appendChild(styleElement);\n        }\n      } else {\n        document.documentElement.classList.remove(\"dark\");\n        document.body.classList.remove(\"dark\");\n        document.documentElement.classList.add(\"light\");\n        document.body.classList.add(\"light\");\n\n        // Принудительно устанавливаем стили для светлой темы\n        const headerElement = document.querySelector(\"header\");\n        if (headerElement) {\n          headerElement.setAttribute(\n            \"style\",\n            \"background-color: #ffffff !important\"\n          );\n        }\n\n        // Сбрасываем все примененные стили\n        document\n          .querySelectorAll(\n            '.card, [class*=\"Card\"], table, tr, td, th, .badge, [class*=\"Badge\"], [class*=\"CardTitle\"], [class*=\"CardDescription\"]'\n          )\n          .forEach((el) => {\n            el.removeAttribute(\"style\");\n          });\n\n        // Удаляем CSS-стили для темной темы\n        const styleElement = document.getElementById(\n          \"custom-dark-theme-styles\"\n        );\n        if (styleElement) {\n          styleElement.remove();\n        }\n      }\n    }\n  }, [theme]);\n\n  // Функция переключения темы\n  const toggleTheme = () => {\n    setTheme((prevTheme) => {\n      const newTheme = prevTheme === \"light\" ? \"dark\" : \"light\";\n      return newTheme;\n    });\n  };\n\n  // Используем контент из скрипта инициализации, если мы не на клиенте\n  if (!isClient) {\n    return <>{children}</>;\n  }\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\n// Хук для использования темы\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/app/theme-styles.tsx"],"sourcesContent":["\"use client\";\n\nexport function ThemeStyles() {\n  return (\n    <style jsx global>{`\n      /* Предотвращение мигания темы */\n      html {\n        visibility: visible;\n        transition: background-color 0.2s ease;\n      }\n\n      /* Стили для светлой темы (по умолчанию) - БЕЛАЯ */\n      :root {\n        --background: #ffffff;\n        --foreground: #171717;\n        --primary: #2563eb;\n        --primary-light: #60a5fa;\n        --border-color: #e5e7eb;\n        --card-bg: #ffffff;\n        --hover-bg: #f9fafb;\n        --text-primary: #171717;\n        --text-secondary: #4b5563;\n        --text-tertiary: #6b7280;\n      }\n\n      html.light,\n      body.light,\n      [data-theme=\"light\"] {\n        background-color: #ffffff !important;\n        color: #171717 !important;\n      }\n\n      html.light header,\n      body.light header,\n      [data-theme=\"light\"] header,\n      body:not([data-theme=\"dark\"]) header,\n      html:not([data-theme=\"dark\"]) header {\n        background-color: #ffffff !important;\n        border-color: #e5e7eb !important;\n      }\n\n      /* Переопределение для хедера в светлой теме */\n      body:not([data-theme=\"dark\"]) header {\n        background-color: #ffffff !important;\n      }\n\n      /* Светлая тема - основные элементы */\n      body:not([data-theme=\"dark\"]) {\n        background-color: #ffffff;\n      }\n\n      body:not([data-theme=\"dark\"]) main,\n      html.light main {\n        background-color: #ffffff !important;\n      }\n\n      body:not([data-theme=\"dark\"]) aside,\n      html.light aside {\n        background-color: #ffffff !important;\n      }\n\n      body:not([data-theme=\"dark\"]) .card,\n      body:not([data-theme=\"dark\"]) [class*=\"Card\"],\n      body:not([data-theme=\"dark\"]) .bg-white,\n      html.light .card,\n      html.light [class*=\"Card\"],\n      html.light .bg-white {\n        background-color: #ffffff !important;\n      }\n\n      body:not([data-theme=\"dark\"]) .border,\n      html.light .border {\n        border-color: #e5e7eb !important;\n      }\n\n      /* ТЕМНО-СИНЯЯ ТЕМА */\n      [data-theme=\"dark\"] {\n        --background: #0a1929;\n        --foreground: #ffffff;\n        --primary: #4d84ff;\n        --primary-dark: #1a56db;\n        --primary-light: #93c5fd;\n        --border-color: #193354;\n        --card-bg: #102a43;\n        --hover-bg: #193354;\n        --text-primary: #ffffff;\n        --text-secondary: #a3c0e6;\n        --text-tertiary: #748fb8;\n        color-scheme: dark;\n      }\n\n      /* Фоны и контейнеры для темной темы */\n      [data-theme=\"dark\"] {\n        background-color: #0a1929 !important;\n        color: #ffffff !important;\n      }\n\n      [data-theme=\"dark\"] .bg-white,\n      [data-theme=\"dark\"] header,\n      [data-theme=\"dark\"] aside,\n      [data-theme=\"dark\"] .bg-gradient-to-b {\n        background-color: #102a43 !important;\n      }\n\n      [data-theme=\"dark\"] .border,\n      [data-theme=\"dark\"] header,\n      [data-theme=\"dark\"] aside,\n      [data-theme=\"dark\"] .border-blue-100 {\n        border-color: #193354 !important;\n      }\n\n      /* Улучшенные текстовые стили для темной темы */\n      [data-theme=\"dark\"] aside button,\n      [data-theme=\"dark\"] p.text-sm.font-medium,\n      [data-theme=\"dark\"] .text-base.font-medium,\n      [data-theme=\"dark\"] .text-black,\n      [data-theme=\"dark\"] aside a,\n      [data-theme=\"dark\"] aside span,\n      [data-theme=\"dark\"] .text-sm,\n      [data-theme=\"dark\"] .text-xs {\n        color: #a3c0e6 !important;\n      }\n\n      /* Делаем основной текст белым */\n      [data-theme=\"dark\"] .font-medium,\n      [data-theme=\"dark\"] .font-bold,\n      [data-theme=\"dark\"] h1,\n      [data-theme=\"dark\"] h2,\n      [data-theme=\"dark\"] h3,\n      [data-theme=\"dark\"] h4,\n      [data-theme=\"dark\"] p {\n        color: #ffffff !important;\n      }\n\n      /* Карточки и фоны с улучшенными эффектами для темной темы */\n      [data-theme=\"dark\"] aside a:hover:not(.bg-blue-50),\n      [data-theme=\"dark\"] .hover\\\\:bg-white:hover,\n      [data-theme=\"dark\"] .data-\\\\[state\\\\=\"active\\\\\"]:bg-white {\n        background-color: #193354 !important;\n      }\n\n      /* Исправления для диалоговых окон */\n      [data-theme=\"dark\"] .DialogContent,\n      [data-theme=\"dark\"] [class*=\"DialogContent\"],\n      [data-theme=\"dark\"] div[role=\"dialog\"] {\n        background-color: #102a43 !important;\n        border-color: #193354 !important;\n      }\n\n      /* Исправления для TabsList и TabsTrigger */\n      [data-theme=\"dark\"] [role=\"tabslist\"] {\n        background-color: #102a43 !important;\n      }\n\n      [data-theme=\"dark\"] [role=\"tab\"][data-state=\"active\"] {\n        background-color: #193354 !important;\n        color: #ffffff !important;\n      }\n\n      /* Исправления для ввода */\n      [data-theme=\"dark\"] input,\n      [data-theme=\"dark\"] select,\n      [data-theme=\"dark\"] textarea {\n        background-color: #0a1929 !important;\n        color: #ffffff !important;\n        border-color: #193354 !important;\n      }\n\n      /* Исправления для бейджей */\n      [data-theme=\"dark\"] .badge {\n        background-color: #193354 !important;\n      }\n\n      /* Исправление наведения */\n      [data-theme=\"dark\"] *:hover {\n        background-color: #234978 !important;\n      }\n\n      /* Фон модального окна */\n      [data-theme=\"dark\"] .fixed.inset-0.z-50 {\n        background-color: rgba(10, 25, 41, 0.7) !important;\n      }\n\n      /* Плавные переходы для всех элементов */\n      * {\n        transition-property: background-color, border-color, color, fill, stroke,\n          opacity, box-shadow, transform;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration: 150ms;\n      }\n\n      /* Специальные элементы с более длительной анимацией */\n      body,\n      .bg-white,\n      .text-black,\n      .border,\n      header,\n      aside,\n      input,\n      select,\n      textarea,\n      .bg-gradient-to-b,\n      .shadow-sm,\n      .shadow-lg {\n        transition: all 0.3s ease;\n      }\n    `}</style>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;;AAEO,SAAS;IACd;;;;AA6MF","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/features/auth/lib/use-auth.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { User } from \"@/entities/user/model/types\";\nimport {\n  LoginCredentials,\n  RegisterCredentials,\n  AuthState,\n} from \"../model/types\";\n\n// Базовый URL API\nconst API_BASE_URL =\n  process.env.NEXT_PUBLIC_API_BASE_URL || \"http://localhost:8000\";\n\n// API сервис аутентификации\nclass AuthService {\n  static async login(\n    credentials: LoginCredentials\n  ): Promise<{ user: User; token: string; refreshToken: string }> {\n    try {\n      console.log(\"Trying to login with credentials:\", credentials.email);\n\n      // Создаем FormData для отправки\n      const formData = new URLSearchParams();\n      formData.append(\"username\", credentials.email); // Бэкенд ожидает параметр 'username'\n      formData.append(\"password\", credentials.password);\n\n      const response = await fetch(`${API_BASE_URL}/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\", // Важно: правильный Content-Type\n          Accept: \"application/json\",\n        },\n        body: formData.toString(), // Преобразуем в строку\n        credentials: \"include\", // Важно для CORS с куками\n        mode: \"cors\", // Явно указываем режим CORS\n      });\n\n      // Детальная обработка ошибок\n      if (!response.ok) {\n        // Пытаемся получить текст ошибки\n        let errorText;\n        try {\n          errorText = await response.text();\n          console.error(\n            \"Login error response:\",\n            errorText,\n            \"Status:\",\n            response.status\n          );\n\n          // Пытаемся распарсить как JSON\n          const errorJson = JSON.parse(errorText);\n          const errorMessage = errorJson.detail || \"Ошибка при входе\";\n          throw new Error(errorMessage);\n        } catch (parseError) {\n          // Если не смогли распарсить JSON, возвращаем текст ошибки или статус\n          console.error(\"Could not parse error response:\", parseError);\n          throw new Error(errorText || `Ошибка сервера: ${response.status}`);\n        }\n      }\n\n      const data = await response.json();\n      console.log(\"Login successful, received data:\", data);\n\n      // Получаем профиль пользователя\n      const userProfile = await AuthService.getUserProfile(data.access_token);\n      console.log(\"User profile:\", userProfile);\n\n      // Сохраняем токены в localStorage\n      localStorage.setItem(\"authToken\", data.access_token);\n      localStorage.setItem(\"user\", JSON.stringify(userProfile));\n\n      return {\n        user: userProfile,\n        token: data.access_token,\n        refreshToken: \"\", // В бэкенде refresh token не используется\n      };\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      throw error;\n    }\n  }\n\n  static async register(\n    credentials: RegisterCredentials\n  ): Promise<{ user: User; token: string; refreshToken: string }> {\n    try {\n      console.log(\"Attempting registration for:\", credentials.email);\n\n      // Подготовка данных для API в соответствии с ожидаемым форматом бэкенда\n      const registerData = {\n        email: credentials.email,\n        password: credentials.password,\n        fullname: credentials.name,\n      };\n\n      // Регистрация пользователя с обработкой CORS\n      const registerResponse = await fetch(`${API_BASE_URL}/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify(registerData),\n        credentials: \"include\", // Важно для CORS с куками\n        mode: \"cors\", // Явно указываем режим CORS\n      });\n\n      // Обработка ошибок\n      if (!registerResponse.ok) {\n        // Пытаемся получить текст ошибки\n        let errorText;\n        try {\n          errorText = await registerResponse.text();\n          console.error(\"Registration error response:\", errorText);\n\n          // Пытаемся распарсить как JSON\n          const errorJson = JSON.parse(errorText);\n          const errorMessage = errorJson.detail || \"Ошибка при регистрации\";\n          throw new Error(errorMessage);\n        } catch (parseError) {\n          // Если не смогли распарсить JSON, возвращаем текст ошибки или статус\n          console.error(\"Could not parse error response:\", parseError);\n          throw new Error(\n            errorText || `Ошибка сервера: ${registerResponse.status}`\n          );\n        }\n      }\n\n      console.log(\"Registration successful\");\n\n      // После успешной регистрации сразу создаем профиль пользователя без доп. запроса логина\n      const userProfile: User = {\n        id: \"temp-id\",\n        name: credentials.name,\n        email: credentials.email,\n        role: \"student\",\n        isActive: true,\n        createdAt: new Date().toISOString(),\n      };\n\n      return {\n        user: userProfile,\n        token: \"temp-token\", // Временный токен - пользователь должен будет авторизоваться\n        refreshToken: \"\",\n      };\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      throw error;\n    }\n  }\n\n  static async getUserProfile(token: string): Promise<User> {\n    const response = await fetch(`${API_BASE_URL}/me`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: \"application/json\",\n      },\n      credentials: \"include\",\n      mode: \"cors\",\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Не удалось получить профиль пользователя\");\n    }\n\n    const userData = await response.json();\n    console.log(\"User data from API:\", userData);\n\n    // Проверяем наличие нужных данных в ответе\n    if (!userData.message || !userData.message.username) {\n      throw new Error(\"Неверный формат данных профиля пользователя\");\n    }\n\n    // Получаем данные пользователя из ответа API\n    const { username, fullname, roles, id } = userData.message;\n\n    // Создаем объект пользователя на основе полученных данных\n    const user: User = {\n      id: id?.toString() || \"1\", // Используем ID из API или дефолтное значение\n      name: fullname || username.split(\"@\")[0], // Используем fullname если доступно, иначе часть email\n      email: username,\n      role: roles?.[0] || \"student\", // Берем первую роль из списка\n      isActive: true,\n      createdAt: new Date().toISOString(),\n    };\n\n    return user;\n  }\n\n  static logout(): void {\n    localStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"refreshToken\");\n    localStorage.removeItem(\"user\");\n  }\n\n  static isAuthenticated(): boolean {\n    return !!localStorage.getItem(\"authToken\");\n  }\n\n  static getUser(): User | null {\n    const userJson = localStorage.getItem(\"user\");\n    if (!userJson) return null;\n\n    try {\n      return JSON.parse(userJson) as User;\n    } catch (e) {\n      console.error(\"Failed to parse user data\", e);\n      return null;\n    }\n  }\n\n  static getToken(): string | null {\n    return localStorage.getItem(\"authToken\");\n  }\n}\n\nexport function useAuth() {\n  const router = useRouter();\n  const [authState, setAuthState] = useState<AuthState>({\n    user: null,\n    token: null,\n    isLoading: true,\n    isAuthenticated: false,\n  });\n\n  // Инициализация состояния аутентификации\n  useEffect(() => {\n    // В клиентском коде нужно проверять window, чтобы избежать ошибок SSR\n    if (typeof window !== \"undefined\") {\n      const token = localStorage.getItem(\"authToken\");\n      const user = AuthService.getUser();\n\n      setAuthState({\n        user,\n        token,\n        isLoading: false,\n        isAuthenticated: !!token && !!user,\n      });\n    }\n  }, []);\n\n  // Функция входа\n  const login = async (credentials: LoginCredentials) => {\n    setAuthState((prev) => ({ ...prev, isLoading: true }));\n    console.log(\"Starting login process\");\n\n    try {\n      const result = await AuthService.login(credentials);\n      console.log(\"Login successful, updating auth state\");\n\n      setAuthState({\n        user: result.user,\n        token: result.token,\n        isLoading: false,\n        isAuthenticated: true,\n      });\n\n      console.log(\"Auth state updated, returning result\");\n      return result;\n    } catch (error) {\n      setAuthState((prev) => ({ ...prev, isLoading: false }));\n      throw error;\n    }\n  };\n\n  // Функция регистрации\n  const register = async (credentials: RegisterCredentials) => {\n    setAuthState((prev) => ({ ...prev, isLoading: true }));\n\n    try {\n      const result = await AuthService.register(credentials);\n\n      // В случае успешной регистрации - не сохраняем состояние авторизации,\n      // т.к. нужно перенаправить на логин\n      setAuthState((prev) => ({\n        ...prev,\n        isLoading: false,\n      }));\n\n      return result;\n    } catch (error) {\n      setAuthState((prev) => ({ ...prev, isLoading: false }));\n      throw error;\n    }\n  };\n\n  // Функция выхода\n  const logout = () => {\n    AuthService.logout();\n\n    setAuthState({\n      user: null,\n      token: null,\n      isLoading: false,\n      isAuthenticated: false,\n    });\n\n    router.push(\"/auth/login\");\n  };\n\n  return {\n    ...authState,\n    login,\n    register,\n    logout,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/app/providers/auth-provider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, ReactNode, useContext } from \"react\";\nimport { useAuth } from \"@/features/auth/lib/use-auth\";\nimport { AuthState } from \"@/features/auth/model/types\";\nimport {\n  LoginFormValues,\n  RegisterFormValues,\n} from \"@/features/auth/model/schema\";\nimport { User } from \"@/entities/user/model/types\";\n\ninterface AuthContextType extends AuthState {\n  login: (\n    data: LoginFormValues\n  ) => Promise<{ user: User; token: string; refreshToken: string }>;\n  register: (\n    data: RegisterFormValues\n  ) => Promise<{ user: User; token: string; refreshToken: string }>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const auth = useAuth();\n\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\n}\n\nexport const useAuthContext = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuthContext must be used within an AuthProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAqBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,OAAO,CAAA,GAAA,6IAAA,CAAA,UAAO,AAAD;IAEnB,qBAAO,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAAO;;;;;;AAC7C;AAEO,MAAM,iBAAiB;IAC5B,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/app/theme-script.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from \"react\";\n\nexport function ThemeScript() {\n  useEffect(() => {\n    // Определяем цвета темно-синей темы - усиленные синие оттенки\n    const darkBlueTheme = {\n      background: \"#0a1929\", // Глубокий темно-синий фон\n      cardBg: \"#102a43\", // Чуть светлее для карточек\n      border: \"#193354\", // Синяя граница\n      activeElementBg: \"#234978\", // Активный элемент - синий\n      hoverElementBg: \"#173050\", // Hover - синий\n      textPrimary: \"#ffffff\",\n      textSecondary: \"#a3c0e6\", // Светло-синий для вторичного текста\n      textTertiary: \"#748fb8\", // Более приглушенный синий для третичного текста\n      accent: \"#4d84ff\", // Синий акцент\n      accentLight: \"#93c5fd\", // Светло-синий акцент\n    };\n\n    // Функция применяет стили для темно-синей темы\n    const applyDarkModeStyles = () => {\n      const isDarkMode = document.documentElement.classList.contains(\"dark\");\n\n      if (isDarkMode) {\n        // Добавляем CSS-стили глобально для всей страницы\n        const styleElement = document.createElement(\"style\");\n        styleElement.id = \"custom-dark-theme-styles\";\n        styleElement.textContent = `\n          /* Переменные темно-синей темы */\n          body.dark, \n          html.dark,\n          [data-theme=\"dark\"] {\n            --bg-primary: ${darkBlueTheme.background};\n            --bg-secondary: ${darkBlueTheme.cardBg};\n            --border-color: ${darkBlueTheme.border};\n            --active-bg: ${darkBlueTheme.activeElementBg};\n            --hover-bg: ${darkBlueTheme.hoverElementBg};\n            --text-primary: ${darkBlueTheme.textPrimary};\n            --text-secondary: ${darkBlueTheme.textSecondary};\n            --text-tertiary: ${darkBlueTheme.textTertiary};\n            --accent: ${darkBlueTheme.accent};\n            --accent-light: ${darkBlueTheme.accentLight};\n            background-color: var(--bg-primary) !important;\n            color: var(--text-primary) !important;\n          }\n\n          /* ПЕРЕОПРЕДЕЛЕНИЕ ВСЕХ СЕРЫХ ЦВЕТОВ НА СИНИЕ */\n          \n          /* Переназначаем классы Tailwind для серых цветов на синие */\n          body.dark .bg-gray-50,\n          body.dark .bg-gray-100,\n          body.dark .bg-gray-200,\n          body.dark .bg-gray-300,\n          body.dark .bg-gray-400,\n          body.dark .bg-gray-500,\n          body.dark .bg-gray-600,\n          body.dark .bg-gray-700,\n          body.dark .bg-gray-800,\n          body.dark .bg-gray-900,\n          body.dark .dark\\\\:bg-gray-50,\n          body.dark .dark\\\\:bg-gray-100,\n          body.dark .dark\\\\:bg-gray-200,\n          body.dark .dark\\\\:bg-gray-300,\n          body.dark .dark\\\\:bg-gray-400,\n          body.dark .dark\\\\:bg-gray-500,\n          body.dark .dark\\\\:bg-gray-600,\n          body.dark .dark\\\\:bg-gray-700,\n          body.dark .dark\\\\:bg-gray-800,\n          body.dark .dark\\\\:bg-gray-900 {\n            background-color: var(--bg-primary) !important;\n          }\n          \n          /* Для элементов с высокой вложенностью принудительно устанавливаем синий фон */\n          body.dark [class*=\"bg-gray\"] {\n            background-color: var(--bg-primary) !important;\n          }\n          \n          /* Переназначаем цвета текста */\n          body.dark .text-gray-50,\n          body.dark .text-gray-100,\n          body.dark .text-gray-200,\n          body.dark .text-gray-300,\n          body.dark .text-gray-400,\n          body.dark .text-gray-500,\n          body.dark .text-gray-600,\n          body.dark .text-gray-700,\n          body.dark .text-gray-800,\n          body.dark .text-gray-900,\n          body.dark .dark\\\\:text-gray-50,\n          body.dark .dark\\\\:text-gray-100,\n          body.dark .dark\\\\:text-gray-200,\n          body.dark .dark\\\\:text-gray-300,\n          body.dark .dark\\\\:text-gray-400,\n          body.dark .dark\\\\:text-gray-500,\n          body.dark .dark\\\\:text-gray-600,\n          body.dark .dark\\\\:text-gray-700,\n          body.dark .dark\\\\:text-gray-800,\n          body.dark .dark\\\\:text-gray-900 {\n            color: var(--text-secondary) !important;\n          }\n          \n          /* Для границ */\n          body.dark .border-gray-50,\n          body.dark .border-gray-100,\n          body.dark .border-gray-200,\n          body.dark .border-gray-300,\n          body.dark .border-gray-400,\n          body.dark .border-gray-500,\n          body.dark .border-gray-600,\n          body.dark .border-gray-700,\n          body.dark .border-gray-800,\n          body.dark .border-gray-900,\n          body.dark .dark\\\\:border-gray-50,\n          body.dark .dark\\\\:border-gray-100,\n          body.dark .dark\\\\:border-gray-200,\n          body.dark .dark\\\\:border-gray-300,\n          body.dark .dark\\\\:border-gray-400,\n          body.dark .dark\\\\:border-gray-500,\n          body.dark .dark\\\\:border-gray-600,\n          body.dark .dark\\\\:border-gray-700,\n          body.dark .dark\\\\:border-gray-800,\n          body.dark .dark\\\\:border-gray-900 {\n            border-color: var(--border-color) !important;\n          }\n\n          /* Базовые элементы */\n          body.dark div, \n          body.dark section, \n          body.dark main, \n          body.dark article, \n          body.dark aside,\n          body.dark [class*=\"Content\"],\n          body.dark [class*=\"container\"] {\n            background-color: var(--bg-primary) !important;\n          }\n\n          /* Удаление классов темной темы в базовых компонентах */\n          body.dark .dark\\\\:bg-gray-700,\n          body.dark .dark\\\\:bg-gray-800, \n          body.dark .dark\\\\:bg-gray-900,\n          body.dark .dark\\\\:border-gray-700,\n          body.dark .dark\\\\:border-gray-800,\n          body.dark .dark\\\\:text-gray-200,\n          body.dark .dark\\\\:text-gray-300,\n          body.dark .dark\\\\:text-gray-400,\n          body.dark .dark\\\\:placeholder\\\\:text-gray-500 {\n            background-color: var(--bg-primary) !important;\n            border-color: var(--border-color) !important;\n            color: var(--text-primary) !important;\n          }\n\n          /* Стандартные классы фонов */\n          body.dark .bg-white,\n          body.dark .bg-gray-50,\n          body.dark .bg-gray-100,\n          body.dark .bg-gray-200,\n          body.dark [class*=\"bg-white\"],\n          body.dark [class*=\"bg-gray\"],\n          body.dark [class*=\"TabsContent\"] {\n            background-color: var(--bg-primary) !important;\n            color: var(--text-primary) !important;\n          }\n          \n          /* Карточки и контейнеры */\n          body.dark .card,\n          body.dark [class*=\"Card\"],\n          body.dark [class*=\"-card\"],\n          body.dark [data-card],\n          body.dark [role=\"dialog\"],\n          body.dark header, \n          body.dark nav,\n          body.dark [class*=\"Header\"] {\n            background-color: var(--bg-secondary) !important;\n            border-color: var(--border-color) !important;\n            color: var(--text-primary) !important;\n          }\n          \n          /* Таблицы */\n          body.dark table,\n          body.dark tbody,\n          body.dark thead {\n            background-color: var(--bg-secondary) !important;\n            border-color: var(--border-color) !important;\n          }\n          \n          body.dark tr {\n            background-color: var(--bg-secondary) !important;\n            border-color: var(--border-color) !important;\n          }\n          \n          body.dark th, \n          body.dark td {\n            color: var(--text-primary) !important;\n            border-color: var(--border-color) !important;\n            background-color: var(--bg-secondary) !important;\n          }\n          \n          /* Текстовые элементы и заголовки */\n          body.dark h1, \n          body.dark h2, \n          body.dark h3, \n          body.dark h4, \n          body.dark h5, \n          body.dark h6, \n          body.dark [class*=\"Title\"],\n          body.dark .text-black,\n          body.dark .dark\\\\:text-white {\n            color: var(--text-primary) !important;\n          }\n          \n          body.dark p, \n          body.dark span:not(.text-white):not(.text-black), \n          body.dark label,\n          body.dark [class*=\"Description\"],\n          body.dark [class*=\"-text\"],\n          body.dark .text-gray-500,\n          body.dark .text-gray-600,\n          body.dark .text-gray-700 {\n            color: var(--text-secondary) !important;\n          }\n          \n          /* Формы и элементы ввода */\n          body.dark input, \n          body.dark textarea, \n          body.dark select {\n            background-color: var(--bg-primary) !important;\n            color: var(--text-primary) !important;\n            border-color: var(--border-color) !important;\n          }\n\n          body.dark input::placeholder,\n          body.dark textarea::placeholder,\n          body.dark select::placeholder {\n            color: var(--text-tertiary) !important;\n          }\n          \n          /* Кнопки */\n          body.dark button {\n            border-color: var(--border-color) !important;\n          }\n          \n          body.dark button[class*=\"outline\"] {\n            border-color: var(--border-color) !important;\n            color: var(--text-primary) !important;\n            background-color: var(--bg-secondary) !important;\n          }\n          \n          /* Бейджи */\n          body.dark .badge, \n          body.dark [class*=\"Badge\"] {\n            background-color: var(--bg-secondary) !important;\n            color: var(--text-primary) !important;\n            border-color: var(--border-color) !important;\n          }\n          \n          /* Тени */\n          body.dark [class*=\"shadow\"] {\n            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.3), 0 1px 2px 0 rgba(0, 0, 0, 0.2) !important;\n          }\n          \n          /* Tabs - вкладки */\n          body.dark [role=\"tablist\"] {\n            background-color: var(--bg-secondary) !important;\n          }\n          \n          body.dark [role=\"tab\"] {\n            color: var(--text-secondary) !important;\n            background-color: transparent !important;\n          }\n          \n          body.dark [role=\"tab\"][data-state=\"active\"] {\n            background-color: var(--active-bg) !important;\n            color: var(--text-primary) !important;\n          }\n          \n          body.dark [role=\"tabpanel\"] {\n            background-color: var(--bg-primary) !important;\n          }\n          \n          /* Ссылки */\n          body.dark a {\n            color: var(--accent-light) !important;\n          }\n          \n          /* Модальные окна и диалоги */\n          body.dark .DialogOverlay,\n          body.dark [class*=\"DialogOverlay\"],\n          body.dark .fixed.inset-0.z-50.bg-black\\\\/50 {\n            background-color: rgba(10, 25, 41, 0.7) !important;\n          }\n          \n          body.dark .DialogContent,\n          body.dark [class*=\"DialogContent\"],\n          body.dark [class*=\"Dialog\"][class*=\"Content\"] {\n            background-color: var(--bg-secondary) !important;\n            border-color: var(--border-color) !important;\n          }\n          \n          body.dark .DialogTitle,\n          body.dark [class*=\"DialogTitle\"] {\n            color: var(--text-primary) !important;\n          }\n          \n          body.dark .DialogDescription,\n          body.dark [class*=\"DialogDescription\"] {\n            color: var(--text-secondary) !important;\n          }\n          \n          /* Акцентные цвета (голубой/синий) */\n          body.dark .text-blue-500,\n          body.dark .text-blue-600,\n          body.dark .text-blue-700 {\n            color: var(--accent-light) !important;\n          }\n          \n          body.dark .bg-blue-500,\n          body.dark .bg-blue-600 {\n            background-color: var(--accent) !important;\n          }\n          \n          body.dark .border-blue-500,\n          body.dark .border-blue-600 {\n            border-color: var(--accent) !important;\n          }\n\n          /* Активная вкладка в TabList */\n          body.dark [data-state=\"active\"] {\n            background-color: var(--active-bg) !important;\n          }\n\n          /* ПРАВИЛА ДЛЯ HOVER-ЭФФЕКТОВ */\n          \n          /* Базовое правило для блокировки нежелательных эффектов */\n          body.dark *:hover {\n            box-shadow: none !important;\n            text-decoration: none !important;\n            transform: none !important;\n            opacity: 1 !important;\n            transition: none !important;\n          }\n          \n          /* Отключаем все hover-эффекты для вложенных элементов */\n          body.dark *:hover * {\n            background-color: inherit !important;\n            color: inherit !important;\n            border-color: inherit !important;\n          }\n          \n          /* Интерактивные элементы */\n          body.dark button:hover:not(:disabled),\n          body.dark [role=\"button\"]:hover,\n          body.dark [type=\"button\"]:hover,\n          body.dark [type=\"submit\"]:hover,\n          body.dark [class*=\"button\"]:hover {\n            background-color: var(--hover-bg) !important;\n            color: var(--text-primary) !important;\n          }\n          \n          /* Ссылки в навигации */\n          body.dark nav a:hover,\n          body.dark header a:hover,\n          body.dark aside a:hover {\n            background-color: var(--hover-bg) !important;\n            color: var(--text-primary) !important;\n          }\n          \n          /* Навигационные элементы */\n          body.dark .nav-item:hover,\n          body.dark [role=\"menuitem\"]:hover {\n            background-color: var(--hover-bg) !important;\n          }\n          \n          /* Табличные строки */\n          body.dark tr:hover {\n            background-color: var(--hover-bg) !important;\n          }\n          \n          /* Устанавливаем background-color для ячеек с помощью класса */\n          body.dark tr.custom-hover-active > td {\n            background-color: var(--hover-bg) !important;\n          }\n\n          /* Только прямые ссылки */\n          body.dark a:hover > * {\n            background-color: transparent !important;\n          }\n          \n          /* Блокируем hover-эффекты для классов Tailwind */\n          body.dark .hover\\\\:bg-gray-100:hover,\n          body.dark .hover\\\\:bg-gray-200:hover,\n          body.dark .hover\\\\:bg-gray-50:hover,\n          body.dark .hover\\\\:text-gray-900:hover,\n          body.dark .hover\\\\:text-gray-800:hover,\n          body.dark .hover\\\\:border-gray-300:hover {\n            background-color: var(--hover-bg) !important;\n            color: var(--text-primary) !important;\n            border-color: var(--border-color) !important;\n          }\n        `;\n\n        const existingStyle = document.getElementById(\n          \"custom-dark-theme-styles\"\n        );\n        if (existingStyle) {\n          existingStyle.remove();\n        }\n        document.head.appendChild(styleElement);\n\n        // Принудительно устанавливаем фон страницы синим\n        document.body.style.backgroundColor = darkBlueTheme.background;\n        document.documentElement.style.backgroundColor =\n          darkBlueTheme.background;\n\n        // Перекрашиваем важные элементы\n        const applyStyles = () => {\n          // Обрабатываем хедеры и карточки\n          document\n            .querySelectorAll('header, [role=\"dialog\"], .card, [class*=\"Card\"]')\n            .forEach((el) => {\n              if (el instanceof HTMLElement) {\n                el.style.backgroundColor = darkBlueTheme.cardBg;\n                el.style.borderColor = darkBlueTheme.border;\n              }\n            });\n\n          // Отдельно обрабатываем диалоги\n          document\n            .querySelectorAll('.DialogContent, [class*=\"DialogContent\"]')\n            .forEach((el) => {\n              if (el instanceof HTMLElement) {\n                el.style.backgroundColor = darkBlueTheme.cardBg;\n                el.style.borderColor = darkBlueTheme.border;\n              }\n            });\n\n          // Переопределяем все серые фоны на синие\n          document\n            .querySelectorAll(\n              '[class*=\"bg-gray\"], .bg-gray-50, .bg-gray-100, .bg-gray-200, .bg-gray-300, .bg-gray-400, .bg-gray-500, .bg-gray-600, .bg-gray-700, .bg-gray-800, .bg-gray-900'\n            )\n            .forEach((el) => {\n              if (el instanceof HTMLElement) {\n                el.style.backgroundColor = darkBlueTheme.background;\n              }\n            });\n\n          // Используем класс для hover-эффекта в таблицах\n          document.querySelectorAll(\"tr\").forEach((row) => {\n            // Удаляем предыдущие обработчики\n            const oldMouseEnter = row.onmouseenter;\n            const oldMouseLeave = row.onmouseleave;\n            if (oldMouseEnter)\n              row.removeEventListener(\"mouseenter\", oldMouseEnter);\n            if (oldMouseLeave)\n              row.removeEventListener(\"mouseleave\", oldMouseLeave);\n\n            // Добавляем новые обработчики\n            row.addEventListener(\"mouseenter\", function () {\n              if (!document.documentElement.classList.contains(\"dark\")) return;\n              this.classList.add(\"custom-hover-active\");\n            });\n\n            row.addEventListener(\"mouseleave\", function () {\n              if (!document.documentElement.classList.contains(\"dark\")) return;\n              this.classList.remove(\"custom-hover-active\");\n            });\n          });\n\n          // Принудительно удаляем все изображения с цветовыми переходами и фонами\n          document\n            .querySelectorAll(\n              \"div[style*='background-image'], div[style*='gradient']\"\n            )\n            .forEach((el) => {\n              if (el instanceof HTMLElement) {\n                if (\n                  el.style.backgroundImage &&\n                  (el.style.backgroundImage.includes(\"linear-gradient\") ||\n                    el.style.backgroundImage.includes(\"radial-gradient\"))\n                ) {\n                  el.style.backgroundImage = \"none\";\n                  el.style.backgroundColor = darkBlueTheme.background;\n                }\n              }\n            });\n        };\n\n        // Применяем стили сразу и через небольшие интервалы, чтобы поймать все элементы\n        applyStyles();\n        setTimeout(applyStyles, 50);\n        setTimeout(applyStyles, 200);\n        setTimeout(applyStyles, 500);\n      } else {\n        // Удаляем CSS-стили для темной темы\n        const styleElement = document.getElementById(\n          \"custom-dark-theme-styles\"\n        );\n        if (styleElement) {\n          styleElement.remove();\n        }\n\n        // Сбрасываем цвета фона\n        document.body.style.backgroundColor = \"\";\n        document.documentElement.style.backgroundColor = \"\";\n\n        // Сбрасываем стили всех элементов\n        document\n          .querySelectorAll(\n            '[style*=\"background-color\"], [style*=\"border-color\"], .custom-hover-active'\n          )\n          .forEach((el) => {\n            if (el instanceof HTMLElement) {\n              el.style.backgroundColor = \"\";\n              el.style.borderColor = \"\";\n              el.classList.remove(\"custom-hover-active\");\n            }\n          });\n\n        // Удаляем обработчики событий для таблиц\n        document.querySelectorAll(\"tr\").forEach((row) => {\n          const oldMouseEnter = row.onmouseenter;\n          const oldMouseLeave = row.onmouseleave;\n          if (oldMouseEnter)\n            row.removeEventListener(\"mouseenter\", oldMouseEnter);\n          if (oldMouseLeave)\n            row.removeEventListener(\"mouseleave\", oldMouseLeave);\n        });\n      }\n    };\n\n    // Запускаем применение темы сразу\n    applyDarkModeStyles();\n\n    // Наблюдаем за изменением класса темы\n    const themeObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (\n          mutation.type === \"attributes\" &&\n          mutation.attributeName === \"class\"\n        ) {\n          applyDarkModeStyles();\n        }\n      });\n    });\n\n    themeObserver.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: [\"class\"],\n    });\n\n    return () => {\n      themeObserver.disconnect();\n    };\n  }, []);\n\n  return (\n    <script\n      dangerouslySetInnerHTML={{\n        __html: `\n          (function() {\n            try {\n              const storageKey = 'theme';\n              const theme = localStorage.getItem(storageKey);\n              const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n              \n              // Если тема есть в localStorage, используем её\n              if (theme === 'light' || theme === 'dark') {\n                document.documentElement.classList.add(theme);\n                document.body.classList.add(theme);\n                \n                // Устанавливаем правильный фон сразу для темной темы\n                if (theme === 'dark') {\n                  document.body.style.backgroundColor = '#0a1929';\n                  document.documentElement.style.backgroundColor = '#0a1929';\n                }\n                \n                return;\n              }\n              \n              // Иначе используем системную тему\n              document.documentElement.classList.add(systemTheme);\n              document.body.classList.add(systemTheme);\n              \n              // Устанавливаем правильный фон сразу для темной темы\n              if (systemTheme === 'dark') {\n                document.body.style.backgroundColor = '#0a1929';\n                document.documentElement.style.backgroundColor = '#0a1929';\n              }\n            } catch (e) {\n              console.error('Error setting theme:', e);\n            }\n          })();\n        `,\n      }}\n    />\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1116, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/shared/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\n/**\n * Utility function to conditionally join class names together\n * and merge Tailwind CSS classes properly\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Breakpoint size constants that match the Tailwind config\n */\nexport const breakpoints = {\n  xxs: 360,\n  xs: 480,\n  sm: 640,\n  md: 768,\n  sdl: 800,\n  lg: 1024,\n  xl: 1280,\n  \"2xl\": 1536,\n} as const;\n\nexport type Breakpoint = keyof typeof breakpoints;\n\n/**\n * Utility function to create responsive classes with a mobile-first approach\n * @param base Base class applied for all screen sizes\n * @param responsive Object mapping breakpoints to classes\n */\nexport function responsive(\n  base: string,\n  responsive: Partial<Record<Breakpoint, string>>\n) {\n  const classes = [base];\n\n  for (const [breakpoint, value] of Object.entries(responsive) as [\n    Breakpoint,\n    string\n  ][]) {\n    classes.push(`${breakpoint}:${value}`);\n  }\n\n  return classes.join(\" \");\n}\n\n/**\n * Проверка, является ли устройство маленьким экраном\n * @returns Возвращает true, если ширина экрана меньше 800px\n */\nexport function isSmallDevice(): boolean {\n  if (typeof window === \"undefined\") return false;\n  return window.innerWidth < breakpoints.sdl;\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAMO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAKO,MAAM,cAAc;IACzB,KAAK;IACL,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,KAAK;IACL,IAAI;IACJ,IAAI;IACJ,OAAO;AACT;AASO,SAAS,WACd,IAAY,EACZ,UAA+C;IAE/C,MAAM,UAAU;QAAC;KAAK;IAEtB,KAAK,MAAM,CAAC,YAAY,MAAM,IAAI,OAAO,OAAO,CAAC,YAG5C;QACH,QAAQ,IAAI,CAAC,GAAG,WAAW,CAAC,EAAE,OAAO;IACvC;IAEA,OAAO,QAAQ,IAAI,CAAC;AACtB;AAMO,SAAS;IACd,wCAAmC,OAAO;;AAE5C","debugId":null}},
    {"offset": {"line": 1158, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Back/Student-Thesis-Platform/src/shared/ui/feedback/MobileScreenWarning.tsx"],"sourcesContent":["\"use client\";\n\nimport { cn } from \"@/shared/lib/utils\";\nimport { ReactNode, useState, useEffect } from \"react\";\nimport { X } from \"lucide-react\";\nimport { usePathname } from \"next/navigation\";\n\nexport interface MobileScreenWarningProps {\n  children?: ReactNode;\n  className?: string;\n  maxWidth?: number;\n  message?: string;\n  dismissible?: boolean;\n  persistent?: boolean;\n}\n\n/**\n * Компонент, который показывает предупреждение на очень узких экранах,\n * предлагая пользователю повернуть устройство или растянуть окно браузера\n */\nexport function MobileScreenWarning({\n  children,\n  className,\n  maxWidth = 360,\n  message = \"Для лучшего отображения поверните устройство или увеличьте размер окна\",\n  dismissible = true,\n  persistent = false,\n}: MobileScreenWarningProps) {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isDismissed, setIsDismissed] = useState(false);\n  const storageKey = \"mobile-warning-dismissed\";\n  const pathname = usePathname();\n\n  // Определяем пути для которых нужно особое предупреждение\n  const isNonAdaptivePath =\n    pathname &&\n    (pathname.includes(\"/dashboard/teams\") ||\n      pathname.includes(\"/dashboard/thesis\"));\n\n  // Проверяем, принадлежит ли путь к дашборду\n  const isDashboardPath = pathname && pathname.startsWith(\"/dashboard\");\n\n  // Не показываем предупреждение для страниц дашборда, кроме страниц команды и дипломной работы\n  const shouldShowWarning = !isDashboardPath || isNonAdaptivePath;\n\n  useEffect(() => {\n    // Проверяем, было ли предупреждение закрыто ранее\n    if (!persistent && localStorage.getItem(storageKey) === \"true\") {\n      setIsDismissed(true);\n    }\n\n    const checkWidth = () => {\n      // Используем разные пороги для разных страниц\n      const thresholdWidth = isNonAdaptivePath ? 800 : maxWidth;\n\n      if (\n        window.innerWidth <= thresholdWidth &&\n        !isDismissed &&\n        shouldShowWarning\n      ) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    // Проверяем ширину при монтировании\n    checkWidth();\n\n    // Добавляем слушатель изменения размера окна\n    window.addEventListener(\"resize\", checkWidth);\n\n    return () => {\n      window.removeEventListener(\"resize\", checkWidth);\n    };\n  }, [maxWidth, isDismissed, persistent, isNonAdaptivePath, shouldShowWarning]);\n\n  const handleDismiss = () => {\n    setIsDismissed(true);\n    setIsVisible(false);\n\n    // Если предупреждение не должно показываться снова, сохраняем это в localStorage\n    if (!persistent) {\n      localStorage.setItem(storageKey, \"true\");\n    }\n  };\n\n  if (!isVisible) {\n    return null;\n  }\n\n  // Разные сообщения для разных страниц\n  const displayMessage = isNonAdaptivePath\n    ? \"Эта страница не полностью адаптирована для экранов меньше 800px. Для лучшего отображения используйте устройство с большим экраном.\"\n    : message;\n\n  return (\n    <div\n      className={cn(\n        \"fixed bottom-0 left-0 right-0 z-50 p-3 bg-warning text-warning-foreground text-sm text-center shadow-md\",\n        \"safe-area-bottom\",\n        className\n      )}\n    >\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex-1\">{displayMessage}</div>\n        {dismissible && (\n          <button\n            onClick={handleDismiss}\n            className=\"ml-2 p-1 rounded-full hover:bg-warning-foreground/10\"\n            aria-label=\"Закрыть предупреждение\"\n          >\n            <X size={16} />\n          </button>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAoBO,SAAS,oBAAoB,EAClC,QAAQ,EACR,SAAS,EACT,WAAW,GAAG,EACd,UAAU,wEAAwE,EAClF,cAAc,IAAI,EAClB,aAAa,KAAK,EACO;IACzB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,aAAa;IACnB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,0DAA0D;IAC1D,MAAM,oBACJ,YACA,CAAC,SAAS,QAAQ,CAAC,uBACjB,SAAS,QAAQ,CAAC,oBAAoB;IAE1C,4CAA4C;IAC5C,MAAM,kBAAkB,YAAY,SAAS,UAAU,CAAC;IAExD,8FAA8F;IAC9F,MAAM,oBAAoB,CAAC,mBAAmB;IAE9C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,kDAAkD;QAClD,IAAI,CAAC,cAAc,aAAa,OAAO,CAAC,gBAAgB,QAAQ;YAC9D,eAAe;QACjB;QAEA,MAAM,aAAa;YACjB,8CAA8C;YAC9C,MAAM,iBAAiB,oBAAoB,MAAM;YAEjD,IACE,OAAO,UAAU,IAAI,kBACrB,CAAC,eACD,mBACA;gBACA,aAAa;YACf,OAAO;gBACL,aAAa;YACf;QACF;QAEA,oCAAoC;QACpC;QAEA,6CAA6C;QAC7C,OAAO,gBAAgB,CAAC,UAAU;QAElC,OAAO;YACL,OAAO,mBAAmB,CAAC,UAAU;QACvC;IACF,GAAG;QAAC;QAAU;QAAa;QAAY;QAAmB;KAAkB;IAE5E,MAAM,gBAAgB;QACpB,eAAe;QACf,aAAa;QAEb,iFAAiF;QACjF,IAAI,CAAC,YAAY;YACf,aAAa,OAAO,CAAC,YAAY;QACnC;IACF;IAEA,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,sCAAsC;IACtC,MAAM,iBAAiB,oBACnB,uIACA;IAEJ,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,6HAAA,CAAA,KAAE,AAAD,EACV,2GACA,oBACA;;0BAGF,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAAU;;;;;;oBACxB,6BACC,8OAAC;wBACC,SAAS;wBACT,WAAU;wBACV,cAAW;kCAEX,cAAA,8OAAC,4LAAA,CAAA,IAAC;4BAAC,MAAM;;;;;;;;;;;;;;;;;YAId;;;;;;;AAGP","debugId":null}}]
}