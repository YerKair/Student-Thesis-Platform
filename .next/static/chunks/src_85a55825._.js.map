{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Diploma-YerKair/Student-Thesis-Platform/src/shared/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/shared/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-lg text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 active:scale-95\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground shadow-sm\",\n        destructive: \"bg-destructive text-destructive-foreground shadow-sm\",\n        outline: \"border border-input bg-background\",\n        secondary:\n          \"bg-secondary text-secondary-foreground border border-secondary\",\n        ghost: \"\",\n        link: \"text-primary underline-offset-4\",\n        success: \"bg-success text-success-foreground shadow-sm\",\n        warning: \"bg-warning text-warning-foreground shadow-sm\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3 text-xs\",\n        lg: \"h-11 rounded-md px-8\",\n        xl: \"h-12 rounded-md px-10 text-base\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,uSACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WACE;YACF,OAAO;YACP,MAAM;YACN,SAAS;YACT,SAAS;QACX;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAGF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Diploma-YerKair/Student-Thesis-Platform/src/shared/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cn } from \"@/shared/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow-sm transition-all duration-200\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EACV,wFACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Diploma-YerKair/Student-Thesis-Platform/src/shared/ui/input.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/shared/lib/utils\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Diploma-YerKair/Student-Thesis-Platform/src/shared/ui/label.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/shared/lib/utils\";\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Diploma-YerKair/Student-Thesis-Platform/src/shared/ui/tabs.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\n\nimport { cn } from \"@/shared/lib/utils\";\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Diploma-YerKair/Student-Thesis-Platform/src/shared/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cn } from \"@/shared/lib/utils\";\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = \"Textarea\";\n\nexport { Textarea };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Diploma-YerKair/Student-Thesis-Platform/src/shared/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/shared/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n        success:\n          \"border-transparent bg-success text-success-foreground hover:bg-success/80\",\n        warning:\n          \"border-transparent bg-warning text-warning-foreground hover:bg-warning/80\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;YACT,SACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,gIAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["file:///Users/kair/Desktop/Diploma-YerKair/Student-Thesis-Platform/src/app/dashboard/teams/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/shared/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/shared/ui/card\";\nimport { Input } from \"@/shared/ui/input\";\nimport { Label } from \"@/shared/ui/label\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/shared/ui/tabs\";\nimport {\n  Users,\n  UserPlus,\n  ExternalLink,\n  X,\n  User,\n  UserPlus2,\n} from \"lucide-react\";\nimport { useToast } from \"@/shared/ui/use-toast\";\nimport { useState, useEffect } from \"react\";\nimport { useAuthContext } from \"@/app/providers/auth-provider\";\nimport { Textarea } from \"@/shared/ui/textarea\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/shared/ui/dialog\";\nimport { Badge } from \"@/shared/ui/badge\";\n\n// Тип для команды\ninterface TeamMember {\n  id: string;\n  name: string;\n  role: string;\n  email: string;\n}\n\ninterface Team {\n  id: string;\n  name: string;\n  description: string;\n  topic: string;\n  inviteCode: string;\n  createdAt: string;\n  members: TeamMember[];\n  createdBy: string;\n}\n\nexport default function TeamsPage() {\n  const { toast } = useToast();\n  const { user } = useAuthContext();\n  const [activeTab, setActiveTab] = useState(\"join\");\n\n  // Состояния для создания команды\n  const [teamName, setTeamName] = useState(\"\");\n  const [teamDescription, setTeamDescription] = useState(\"\");\n  const [teamTopic, setTeamTopic] = useState(\"\");\n\n  // Состояние для присоединения к команде\n  const [inviteCode, setInviteCode] = useState(\"\");\n\n  // Состояние для отображения команды пользователя\n  const [myTeam, setMyTeam] = useState<Team | null>(null);\n  const [allTeams, setAllTeams] = useState<Team[]>([]);\n\n  // Состояния для работы с модальным окном для приглашения\n  const [isInviteDialogOpen, setIsInviteDialogOpen] = useState(false);\n  const [inviteEmail, setInviteEmail] = useState(\"\");\n  const [inviteRole, setInviteRole] = useState(\"\");\n\n  // Загрузка существующих команд из localStorage при инициализации\n  useEffect(() => {\n    const teamsFromStorage = localStorage.getItem(\"teams\");\n    if (teamsFromStorage) {\n      const parsedTeams = JSON.parse(teamsFromStorage);\n      setAllTeams(parsedTeams);\n\n      // Проверяем, является ли текущий пользователь членом какой-либо команды\n      if (user) {\n        const userTeam = parsedTeams.find((team: Team) =>\n          team.members.some((member: TeamMember) => member.id === user.id)\n        );\n\n        if (userTeam) {\n          setMyTeam(userTeam);\n          setActiveTab(\"my-team\");\n        }\n      }\n    }\n  }, [user]);\n\n  // Функция для генерации уникального кода приглашения\n  const generateInviteCode = () => {\n    const characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let result = \"\";\n    for (let i = 0; i < 6; i++) {\n      result += characters.charAt(\n        Math.floor(Math.random() * characters.length)\n      );\n    }\n    return result;\n  };\n\n  // Функция для создания новой команды\n  const handleCreateTeam = () => {\n    if (!user) {\n      toast({\n        title: \"Ошибка\",\n        description: \"Необходимо авторизоваться для создания команды\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (!teamName.trim()) {\n      toast({\n        title: \"Ошибка\",\n        description: \"Введите название команды\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // Проверка, является ли пользователь уже членом команды\n    if (myTeam) {\n      toast({\n        title: \"Ошибка\",\n        description: \"Вы уже состоите в команде\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // Создаем новую команду\n    const newTeam: Team = {\n      id: Date.now().toString(),\n      name: teamName,\n      description: teamDescription,\n      topic: teamTopic,\n      inviteCode: generateInviteCode(),\n      createdAt: new Date().toISOString(),\n      members: [\n        {\n          id: user.id,\n          name: user.name || \"Пользователь\",\n          role: \"Владелец\",\n          email: user.email,\n        },\n      ],\n      createdBy: user.id,\n    };\n\n    // Обновляем список всех команд\n    const updatedTeams = [...allTeams, newTeam];\n    localStorage.setItem(\"teams\", JSON.stringify(updatedTeams));\n    setAllTeams(updatedTeams);\n    setMyTeam(newTeam);\n\n    // Сбрасываем поля формы\n    setTeamName(\"\");\n    setTeamDescription(\"\");\n    setTeamTopic(\"\");\n\n    // Переключаемся на вкладку \"Моя команда\"\n    setActiveTab(\"my-team\");\n\n    toast({\n      title: \"Успех\",\n      description: \"Команда успешно создана\",\n    });\n  };\n\n  // Функция для присоединения к команде по коду приглашения\n  const handleJoinTeam = () => {\n    if (!user) {\n      toast({\n        title: \"Ошибка\",\n        description: \"Необходимо авторизоваться для присоединения к команде\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (!inviteCode.trim()) {\n      toast({\n        title: \"Ошибка\",\n        description: \"Введите код приглашения\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // Проверка, является ли пользователь уже членом команды\n    if (myTeam) {\n      toast({\n        title: \"Ошибка\",\n        description: \"Вы уже состоите в команде\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // Ищем команду по коду приглашения\n    const foundTeam = allTeams.find((team) => team.inviteCode === inviteCode);\n\n    if (!foundTeam) {\n      toast({\n        title: \"Ошибка\",\n        description: \"Команда с указанным кодом не найдена\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // Проверяем, не состоит ли пользователь уже в этой команде\n    if (foundTeam.members.some((member) => member.id === user.id)) {\n      toast({\n        title: \"Информация\",\n        description: \"Вы уже являетесь членом этой команды\",\n      });\n      setMyTeam(foundTeam);\n      setActiveTab(\"my-team\");\n      return;\n    }\n\n    // Добавляем пользователя в команду\n    const newMember: TeamMember = {\n      id: user.id,\n      name: user.name || \"Пользователь\",\n      role: \"Участник\",\n      email: user.email,\n    };\n\n    const updatedTeam = {\n      ...foundTeam,\n      members: [...foundTeam.members, newMember],\n    };\n\n    // Обновляем список всех команд\n    const updatedTeams = allTeams.map((team) =>\n      team.id === updatedTeam.id ? updatedTeam : team\n    );\n\n    localStorage.setItem(\"teams\", JSON.stringify(updatedTeams));\n    setAllTeams(updatedTeams);\n    setMyTeam(updatedTeam);\n    setInviteCode(\"\");\n    setActiveTab(\"my-team\");\n\n    toast({\n      title: \"Успех\",\n      description: \"Вы успешно присоединились к команде\",\n    });\n  };\n\n  // Функция для выхода из команды\n  const handleLeaveTeam = () => {\n    if (!user || !myTeam) {\n      return;\n    }\n\n    // Проверяем, является ли пользователь создателем команды\n    if (myTeam.createdBy === user.id) {\n      if (myTeam.members.length > 1) {\n        toast({\n          title: \"Ошибка\",\n          description:\n            \"Вы не можете покинуть созданную вами команду, пока в ней есть другие участники\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      // Если пользователь - единственный член и создатель команды, удаляем команду\n      const updatedTeams = allTeams.filter((team) => team.id !== myTeam.id);\n      localStorage.setItem(\"teams\", JSON.stringify(updatedTeams));\n      setAllTeams(updatedTeams);\n      setMyTeam(null);\n\n      toast({\n        title: \"Информация\",\n        description:\n          \"Команда была удалена, так как вы были единственным участником\",\n      });\n      return;\n    }\n\n    // Удаляем пользователя из членов команды\n    const updatedMembers = myTeam.members.filter(\n      (member) => member.id !== user.id\n    );\n    const updatedTeam = { ...myTeam, members: updatedMembers };\n\n    // Обновляем список всех команд\n    const updatedTeams = allTeams.map((team) =>\n      team.id === myTeam.id ? updatedTeam : team\n    );\n\n    localStorage.setItem(\"teams\", JSON.stringify(updatedTeams));\n    setAllTeams(updatedTeams);\n    setMyTeam(null);\n\n    toast({\n      title: \"Информация\",\n      description: \"Вы покинули команду\",\n    });\n  };\n\n  // Функция для приглашения нового участника\n  const handleInviteMember = () => {\n    if (!myTeam || !inviteEmail.trim() || !inviteRole.trim()) {\n      toast({\n        title: \"Ошибка\",\n        description: \"Заполните все поля\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // В реальном приложении здесь был бы запрос к API\n    // Сейчас просто показываем сообщение с кодом приглашения\n\n    toast({\n      title: \"Приглашение отправлено\",\n      description: `Отправлено приглашение на email: ${inviteEmail}. Код приглашения: ${myTeam.inviteCode}`,\n    });\n\n    setIsInviteDialogOpen(false);\n    setInviteEmail(\"\");\n    setInviteRole(\"\");\n  };\n\n  return (\n    <div className=\"space-y-6 p-3 xxs:p-4 sm:p-6\">\n      <div>\n        <h1 className=\"text-xl xxs:text-2xl md:text-3xl font-bold tracking-tight\">\n          Команды\n        </h1>\n        <p className=\"text-xs xxs:text-sm md:text-base text-gray-600\">\n          Создание и управление командами для дипломных проектов\n        </p>\n      </div>\n\n      <div className=\"w-full overflow-hidden\">\n        <Tabs\n          defaultValue=\"join\"\n          className=\"w-full\"\n          value={activeTab}\n          onValueChange={setActiveTab}\n        >\n          <div className=\"overflow-x-auto pb-2\">\n            <TabsList className=\"w-full sm:w-auto\">\n              <TabsTrigger\n                value=\"join\"\n                className=\"flex-1 sm:flex-none text-xs xxs:text-sm\"\n                disabled={!!myTeam}\n              >\n                Присоединиться\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"create\"\n                className=\"flex-1 sm:flex-none text-xs xxs:text-sm\"\n                disabled={!!myTeam}\n              >\n                Создать команду\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"my-team\"\n                className=\"flex-1 sm:flex-none text-xs xxs:text-sm\"\n              >\n                Моя команда\n              </TabsTrigger>\n            </TabsList>\n          </div>\n\n          <TabsContent value=\"join\" className=\"mt-3 xxs:mt-4\">\n            <Card>\n              <CardHeader className=\"p-3 xxs:p-4 sm:p-6\">\n                <CardTitle className=\"text-base xxs:text-lg sm:text-xl\">\n                  Присоединиться к команде\n                </CardTitle>\n                <CardDescription className=\"text-xs xxs:text-sm\">\n                  Введите код приглашения, чтобы присоединиться к существующей\n                  команде\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-3 xxs:space-y-4 p-3 xxs:p-4 sm:p-6 pt-0 xxs:pt-0 sm:pt-0\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"team-code\" className=\"text-xs xxs:text-sm\">\n                    Код команды\n                  </Label>\n                  <div className=\"flex flex-col sm:flex-row gap-2\">\n                    <Input\n                      id=\"team-code\"\n                      placeholder=\"Например: ABC123\"\n                      className=\"flex-1\"\n                      value={inviteCode}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                        setInviteCode(e.target.value)\n                      }\n                    />\n                    <Button\n                      onClick={handleJoinTeam}\n                      className=\"w-full sm:w-auto mt-2 sm:mt-0 text-xs xxs:text-sm h-8 xxs:h-10\"\n                    >\n                      <UserPlus className=\"mr-2 h-3 w-3 xxs:h-4 xxs:w-4\" />\n                      Присоединиться\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"create\" className=\"mt-3 xxs:mt-4\">\n            <Card>\n              <CardHeader className=\"p-3 xxs:p-4 sm:p-6\">\n                <CardTitle className=\"text-base xxs:text-lg sm:text-xl\">\n                  Создать новую команду\n                </CardTitle>\n                <CardDescription className=\"text-xs xxs:text-sm\">\n                  Создайте команду и пригласите участников для работы над\n                  дипломом\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-3 xxs:space-y-4 p-3 xxs:p-4 sm:p-6 pt-0 xxs:pt-0 sm:pt-0\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"team-name\" className=\"text-xs xxs:text-sm\">\n                    Название команды*\n                  </Label>\n                  <Input\n                    id=\"team-name\"\n                    placeholder=\"Введите название команды\"\n                    value={teamName}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                      setTeamName(e.target.value)\n                    }\n                    required\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"team-topic\" className=\"text-xs xxs:text-sm\">\n                    Тема проекта\n                  </Label>\n                  <Input\n                    id=\"team-topic\"\n                    placeholder=\"Тема дипломного проекта\"\n                    value={teamTopic}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                      setTeamTopic(e.target.value)\n                    }\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label\n                    htmlFor=\"team-description\"\n                    className=\"text-xs xxs:text-sm\"\n                  >\n                    Описание\n                  </Label>\n                  <Textarea\n                    id=\"team-description\"\n                    placeholder=\"Краткое описание команды и проекта\"\n                    value={teamDescription}\n                    onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n                      setTeamDescription(e.target.value)\n                    }\n                    className=\"min-h-[100px]\"\n                  />\n                </div>\n                <div className=\"pt-3 xxs:pt-4\">\n                  <Button\n                    onClick={handleCreateTeam}\n                    className=\"w-full sm:w-auto text-xs xxs:text-sm h-8 xxs:h-10\"\n                  >\n                    <Users className=\"mr-2 h-3 w-3 xxs:h-4 xxs:w-4\" />\n                    Создать команду\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"my-team\" className=\"mt-3 xxs:mt-4\">\n            {myTeam ? (\n              <Card>\n                <CardHeader className=\"p-3 xxs:p-4 sm:p-6\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2\">\n                    <div>\n                      <CardTitle className=\"text-base xxs:text-lg sm:text-xl\">\n                        {myTeam.name}\n                      </CardTitle>\n                      <CardDescription className=\"text-xs xxs:text-sm\">\n                        {myTeam.topic\n                          ? myTeam.topic\n                          : \"Тема проекта не указана\"}\n                      </CardDescription>\n                    </div>\n                    <Badge variant=\"outline\" className=\"w-fit\">\n                      Код приглашения: {myTeam.inviteCode}\n                    </Badge>\n                  </div>\n                </CardHeader>\n                <CardContent className=\"space-y-4 p-3 xxs:p-4 sm:p-6 pt-0 xxs:pt-0 sm:pt-0\">\n                  {myTeam.description && (\n                    <div>\n                      <h3 className=\"text-sm font-medium mb-1\">Описание:</h3>\n                      <p className=\"text-sm text-gray-600\">\n                        {myTeam.description}\n                      </p>\n                    </div>\n                  )}\n\n                  <div>\n                    <h3 className=\"text-sm font-medium mb-2\">\n                      Участники команды:\n                    </h3>\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2\">\n                      {myTeam.members.map((member) => (\n                        <div\n                          key={member.id}\n                          className=\"flex items-center p-2 border rounded-md\"\n                        >\n                          <div className=\"h-8 w-8 rounded-full bg-primary/10 flex items-center justify-center mr-2\">\n                            <User className=\"h-4 w-4 text-primary\" />\n                          </div>\n                          <div className=\"flex-1 min-w-0\">\n                            <p className=\"text-sm font-medium truncate\">\n                              {member.name}\n                            </p>\n                            <p className=\"text-xs text-gray-500 truncate\">\n                              {member.role}\n                            </p>\n                          </div>\n                          {member.id === myTeam.createdBy && (\n                            <Badge className=\"ml-2\" variant=\"secondary\">\n                              Владелец\n                            </Badge>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </CardContent>\n                <CardFooter className=\"flex flex-col sm:flex-row gap-2 justify-between p-3 xxs:p-4 sm:p-6\">\n                  <Dialog\n                    open={isInviteDialogOpen}\n                    onOpenChange={setIsInviteDialogOpen}\n                  >\n                    <DialogTrigger asChild>\n                      <Button\n                        variant=\"outline\"\n                        className=\"w-full sm:w-auto text-xs xxs:text-sm h-8 xxs:h-10\"\n                      >\n                        <UserPlus2 className=\"mr-2 h-3 w-3 xxs:h-4 xxs:w-4\" />\n                        Пригласить участника\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent className=\"sm:max-w-[425px]\">\n                      <DialogHeader>\n                        <DialogTitle>Пригласить участника</DialogTitle>\n                        <DialogDescription>\n                          Отправьте приглашение новому участнику команды\n                        </DialogDescription>\n                      </DialogHeader>\n                      <div className=\"grid gap-4 py-4\">\n                        <div className=\"grid grid-cols-4 items-center gap-4\">\n                          <Label htmlFor=\"invite-email\" className=\"text-right\">\n                            Email\n                          </Label>\n                          <Input\n                            id=\"invite-email\"\n                            type=\"email\"\n                            placeholder=\"email@example.com\"\n                            className=\"col-span-3\"\n                            value={inviteEmail}\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>\n                            ) => setInviteEmail(e.target.value)}\n                          />\n                        </div>\n                        <div className=\"grid grid-cols-4 items-center gap-4\">\n                          <Label htmlFor=\"invite-role\" className=\"text-right\">\n                            Роль\n                          </Label>\n                          <Input\n                            id=\"invite-role\"\n                            placeholder=\"Разработчик, Дизайнер и т.д.\"\n                            className=\"col-span-3\"\n                            value={inviteRole}\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>\n                            ) => setInviteRole(e.target.value)}\n                          />\n                        </div>\n                      </div>\n                      <DialogFooter>\n                        <Button type=\"button\" onClick={handleInviteMember}>\n                          Отправить приглашение\n                        </Button>\n                      </DialogFooter>\n                    </DialogContent>\n                  </Dialog>\n\n                  <Button\n                    variant=\"destructive\"\n                    className=\"w-full sm:w-auto text-xs xxs:text-sm h-8 xxs:h-10\"\n                    onClick={handleLeaveTeam}\n                  >\n                    <X className=\"mr-2 h-3 w-3 xxs:h-4 xxs:w-4\" />\n                    {myTeam.createdBy === user?.id\n                      ? \"Удалить команду\"\n                      : \"Покинуть команду\"}\n                  </Button>\n                </CardFooter>\n              </Card>\n            ) : (\n              <Card>\n                <CardHeader className=\"p-3 xxs:p-4 sm:p-6\">\n                  <CardTitle className=\"text-base xxs:text-lg sm:text-xl\">\n                    Моя команда\n                  </CardTitle>\n                  <CardDescription className=\"text-xs xxs:text-sm\">\n                    У вас пока нет команды\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"flex flex-col items-center justify-center py-4 xxs:py-6 sm:py-8 px-3 xxs:px-4 sm:px-6\">\n                  <Users className=\"h-12 w-12 xxs:h-16 xxs:w-16 text-gray-300 mb-3 xxs:mb-4\" />\n                  <p className=\"text-center text-gray-600 max-w-md text-xs xxs:text-sm\">\n                    Присоединитесь к команде или создайте свою для совместной\n                    работы над дипломным проектом\n                  </p>\n                </CardContent>\n                <CardFooter className=\"flex flex-col sm:flex-row gap-2 xxs:gap-3 justify-center sm:justify-between p-3 xxs:p-4 sm:p-6\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => setActiveTab(\"join\")}\n                    className=\"w-full sm:w-auto text-xs xxs:text-sm h-8 xxs:h-10\"\n                  >\n                    Присоединиться к команде\n                  </Button>\n                  <Button\n                    onClick={() => setActiveTab(\"create\")}\n                    className=\"w-full sm:w-auto text-xs xxs:text-sm h-8 xxs:h-10\"\n                  >\n                    Создать команду\n                  </Button>\n                </CardFooter>\n              </Card>\n            )}\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}